[
    {
        "id": "305c6dd9.7f9612",
        "type": "tab",
        "label": "Übersicht",
        "disabled": false,
        "info": ""
    },
    {
        "id": "951993f4.8206d",
        "type": "tab",
        "label": "Jalausie",
        "disabled": false,
        "info": ""
    },
    {
        "id": "812b0ff61703e7f7",
        "type": "tab",
        "label": "Markise",
        "disabled": false,
        "info": ""
    },
    {
        "id": "b58df928500ccc77",
        "type": "tab",
        "label": "Ereignisprotokoll",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ee3039d35ce6bda2",
        "type": "tab",
        "label": "Elektrozähler",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "62256efe3f7916e8",
        "type": "tab",
        "label": "System",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0e918df6115ec9f7",
        "type": "tab",
        "label": "Arduino RX/TX",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ed5bac61b671b26e",
        "type": "ui_base",
        "theme": {
            "name": "theme-custom",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#a9df9c",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#4B7930",
                    "value": "#a9df9c",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#a9df9c",
                    "edited": true
                },
                "page-backgroundColor": {
                    "value": "#e3f5de",
                    "edited": true
                },
                "page-sidebar-backgroundColor": {
                    "value": "#c8d8c4",
                    "edited": true
                },
                "group-textColor": {
                    "value": "#000000",
                    "edited": true
                },
                "group-borderColor": {
                    "value": "#c8d8c4",
                    "edited": true
                },
                "group-backgroundColor": {
                    "value": "#a9df9c",
                    "edited": true
                },
                "widget-textColor": {
                    "value": "#000000",
                    "edited": true
                },
                "widget-backgroundColor": {
                    "value": "#a9df9c",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#a9df9c",
                    "edited": true
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Sun",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD.MM.YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "956a7397bc0e915e",
        "type": "ui_group",
        "name": "Datum",
        "tab": "1e63913.b5e0a6f",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "5c960cfb609cc93c",
        "type": "ui_group",
        "name": "Aussentemperatur",
        "tab": "1e63913.b5e0a6f",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "0d643f19a234b1e3",
        "type": "ui_group",
        "name": "Windgeschwindigkeit",
        "tab": "1e63913.b5e0a6f",
        "order": 7,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e8347c42c79e06a8",
        "type": "ui_group",
        "name": "Regenwahrscheinlichkeit",
        "tab": "1e63913.b5e0a6f",
        "order": 9,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "1ca180f72b81918c",
        "type": "ui_group",
        "name": "Luftfeuchtigkeit",
        "tab": "1e63913.b5e0a6f",
        "order": 10,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "f513320a4481d386",
        "type": "ui_group",
        "name": "Niederschlag",
        "tab": "1e63913.b5e0a6f",
        "order": 8,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d90c12143c2e28b4",
        "type": "ui_group",
        "name": "Windschutz",
        "tab": "eaf72d29c27d5532",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "6752cf8bb4d6264e",
        "type": "ui_group",
        "name": "Uhrzeit",
        "tab": "1e63913.b5e0a6f",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "f38a2925ce1a334a",
        "type": "ui_group",
        "name": "Niederschlagschutz",
        "tab": "eaf72d29c27d5532",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "14ea130f6e6b7405",
        "type": "ui_group",
        "name": "Zeitprogramm",
        "tab": "eaf72d29c27d5532",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "3a1c8458509d8435",
        "type": "ui_group",
        "name": "Sonnenstand",
        "tab": "eaf72d29c27d5532",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "922b78cb649e46cb",
        "type": "ui_group",
        "name": "Windschutz",
        "tab": "ab9dc87bc4361ffa",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7931605bd60b47a1",
        "type": "ui_group",
        "name": "Niederschlagschutz",
        "tab": "ab9dc87bc4361ffa",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "54566316ec606040",
        "type": "ui_group",
        "name": "Zeitprogramm",
        "tab": "ab9dc87bc4361ffa",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d44f1d1e25036908",
        "type": "ui_group",
        "name": "Sonnenstand",
        "tab": "ab9dc87bc4361ffa",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "161e9e42bd0768fa",
        "type": "ui_group",
        "name": "Datei log.txt",
        "tab": "2038a0f4c400756e",
        "order": 2,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ef88dac95fd5e728",
        "type": "ui_group",
        "name": "Allgemein",
        "tab": "2038a0f4c400756e",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "1e63913.b5e0a6f",
        "type": "ui_tab",
        "name": "Übersicht",
        "icon": "info",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "eaf72d29c27d5532",
        "type": "ui_tab",
        "name": "Jalausie",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "ab9dc87bc4361ffa",
        "type": "ui_tab",
        "name": "Markise",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "2038a0f4c400756e",
        "type": "ui_tab",
        "name": "Ereignisprotokoll",
        "icon": "Quick Referenze",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "76249244aeb2b0dd",
        "type": "global-config",
        "env": []
    },
    {
        "id": "73facf39de5e6333",
        "type": "modbus-client",
        "name": "Arduino",
        "clienttype": "simpleser",
        "bufferCommands": true,
        "stateLogEnabled": true,
        "queueLogEnabled": true,
        "failureLogEnabled": true,
        "tcpHost": "127.0.0.1",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyACM0",
        "serialType": "RTU-BUFFERD",
        "serialBaudrate": "57600",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "0x3A",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true,
        "showErrors": true,
        "showWarnings": true,
        "showLogs": false
    },
    {
        "id": "cf2ecd3598188257",
        "type": "ui_group",
        "name": "USB-Modbus",
        "tab": "e35c0932277e7ed1",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "9ce68eba8f076d45",
        "type": "modbus-client",
        "name": "Elektrozähler",
        "clienttype": "serial",
        "bufferCommands": true,
        "stateLogEnabled": true,
        "queueLogEnabled": false,
        "failureLogEnabled": true,
        "tcpHost": "127.0.0.1",
        "tcpPort": "502",
        "tcpType": "DEFAULT",
        "serialPort": "/dev/ttyUSB0",
        "serialType": "RTU",
        "serialBaudrate": "19200",
        "serialDatabits": "8",
        "serialStopbits": "1",
        "serialParity": "none",
        "serialConnectionDelay": "100",
        "serialAsciiResponseStartDelimiter": "",
        "unit_id": "1",
        "commandDelay": "1",
        "clientTimeout": "1000",
        "reconnectOnTimeout": true,
        "reconnectTimeout": "2000",
        "parallelUnitIdsAllowed": true,
        "showErrors": true,
        "showWarnings": true,
        "showLogs": true
    },
    {
        "id": "e35c0932277e7ed1",
        "type": "ui_tab",
        "name": "Elektrozähler",
        "icon": "flash_on",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "55f3b6cfd457f92e",
        "type": "ui_group",
        "name": "Spannung",
        "tab": "e35c0932277e7ed1",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "20f7b488a22475a9",
        "type": "ui_group",
        "name": "Sonnenaufgang",
        "tab": "1e63913.b5e0a6f",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "769eb6f4b51ce928",
        "type": "ui_group",
        "name": "Arbeit",
        "tab": "e35c0932277e7ed1",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "2d3508085627b53b",
        "type": "ui_group",
        "name": "Leistung",
        "tab": "e35c0932277e7ed1",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7d8e1049cb9a10f3",
        "type": "ui_group",
        "name": "Strom",
        "tab": "e35c0932277e7ed1",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "3d298cd0c77762c0",
        "type": "ui_group",
        "name": "Frequenz",
        "tab": "e35c0932277e7ed1",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "99761ed64a28f273",
        "type": "ui_tab",
        "name": "System",
        "icon": "build",
        "order": 6,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "1a75bd5ce7cf87b7",
        "type": "ui_group",
        "name": "Digital Input",
        "tab": "99761ed64a28f273",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "f9a37251258d3239",
        "type": "ui_group",
        "name": "Analog Input",
        "tab": "99761ed64a28f273",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "cde3204505e233f9",
        "type": "ui_group",
        "name": "Float numbers",
        "tab": "99761ed64a28f273",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "468662edd902235f",
        "type": "ui_group",
        "name": "Digital Output",
        "tab": "99761ed64a28f273",
        "order": 4,
        "disp": true,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "40ef4b80cc4f3c98",
        "type": "ui_group",
        "name": "USB Modbus",
        "tab": "99761ed64a28f273",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "55cfe9a3f630dc38",
        "type": "ui_group",
        "name": "Sonnenhöchststand",
        "tab": "1e63913.b5e0a6f",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "021ba68479d1aae5",
        "type": "ui_group",
        "name": "Sonnenuntergang",
        "tab": "1e63913.b5e0a6f",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "587e9baa.9f8474",
        "type": "comment",
        "z": "305c6dd9.7f9612",
        "name": "Controllino SunShading",
        "info": "user interface for Controllino Jealousy2Channel",
        "x": 160,
        "y": 40,
        "wires": []
    },
    {
        "id": "6f8e4446.74d5fc",
        "type": "comment",
        "z": "305c6dd9.7f9612",
        "name": "Übersicht",
        "info": "",
        "x": 120,
        "y": 100,
        "wires": []
    },
    {
        "id": "9b18099c.68d518",
        "type": "comment",
        "z": "305c6dd9.7f9612",
        "name": "ID\tICAO\tNAME\tLAT\tLON\tELEV K2913\t----\tBOEBLINGEN\t48.41\t21398\t445",
        "info": "",
        "x": 300,
        "y": 980,
        "wires": []
    },
    {
        "id": "19133ae9.fd9765",
        "type": "function",
        "z": "305c6dd9.7f9612",
        "name": "LocalTime",
        "func": "var timestamp = msg.payload;\nlet time = new Date(timestamp).toLocaleTimeString();\nglobal.set('time', time);\nmsg.payload = flow.get('FontUebersicht') + time;\n\n// timeShort\nvar x = 'text';\nx = time.substring(0,5);\nglobal.set('timeShort', x );\n\n\n// time minute\nvar timeHourText = x.substr(0, 2);\nvar timeMinuteText = x.substr(3, 2);\nvar timeMinuteNumber = Number(timeHourText) * 60 + Number(timeMinuteText);\nglobal.set('TimeMinute', timeMinuteNumber, 'file'); \n\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 360,
        "wires": [
            [
                "1502cb78.076475"
            ]
        ]
    },
    {
        "id": "552d5d66.9404f4",
        "type": "inject",
        "z": "305c6dd9.7f9612",
        "name": "intervall 1 sec",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 360,
        "wires": [
            [
                "feca8d4a.d9a86"
            ]
        ]
    },
    {
        "id": "e7806b1c.45a068",
        "type": "inject",
        "z": "305c6dd9.7f9612",
        "name": "intervall 1 min",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 167,
        "y": 1091,
        "wires": [
            [
                "b43387f0.675958"
            ]
        ]
    },
    {
        "id": "7b8a9283.e3cefc",
        "type": "function",
        "z": "305c6dd9.7f9612",
        "name": "tempc HTTP",
        "func": "\nlet temp = msg.payload.tempc;\nglobal.set('AI_Aussentemperatur', temp);\n\nmsg.payload = flow.get('FontUebersicht') + msg.payload.tempc + \" °C\"\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 1040,
        "wires": [
            [
                "dda54879.9a1f48"
            ]
        ]
    },
    {
        "id": "bd2eb842.8af0c8",
        "type": "function",
        "z": "305c6dd9.7f9612",
        "name": "windspeed max HTTP and Controllino",
        "func": "//Controllino\nvar speed1 = global.get('WindSpeedMax');\n\n//HTTP\nvar speed2 = 3.2;\nspeed2 = msg.payload.FX1*3.6;\nspeed2 = Math.round(speed2*100)/100;\nglobal.set('AV_WindMax', Math.max(speed1, speed2))\nglobal.set('AI_Wind_HTTP',speed2);\nglobal.set('AV_WindMax',Math.max(speed1,speed2));\n\nmsg.payload = flow.get('FontUebersicht') + Math.max(speed1, speed2) + \" km/h\"\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 1153,
        "wires": [
            [
                "1595a4bc.67ecfb"
            ]
        ]
    },
    {
        "id": "e54ac9d4.de5138",
        "type": "inject",
        "z": "305c6dd9.7f9612",
        "name": "all 60 minutes",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "0 0-2 * * *",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 140,
        "y": 520,
        "wires": [
            [
                "a93d1eb.c4f22e",
                "37b2c48.5fc853c"
            ]
        ]
    },
    {
        "id": "a93d1eb.c4f22e",
        "type": "function",
        "z": "305c6dd9.7f9612",
        "name": "Get Sunset info",
        "func": "msg.url = \"https://api.sunrise-sunset.org/json?&formatted=0&tzid=Europe/Berlin&lat=48.6429777&lng=9.004596,19\";\nreturn msg;\n\n//https://sunrise-sunset.org/api\n\n\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 520,
        "wires": [
            [
                "9a782ceb.a80e4"
            ]
        ]
    },
    {
        "id": "b1f1a442.823078",
        "type": "comment",
        "z": "305c6dd9.7f9612",
        "name": "https://flows.nodered.org/flow/195d85a2f5ebfceea78d3f68bd447c0b",
        "info": "",
        "x": 620,
        "y": 620,
        "wires": []
    },
    {
        "id": "e2156b93.57d838",
        "type": "comment",
        "z": "305c6dd9.7f9612",
        "name": "google.maps 48.6429777,9.004596",
        "info": "https://www.google.de/maps/place/Annaweg+9,+71088+Holzgerlingen/@48.6429777,9.004596,19",
        "x": 520,
        "y": 660,
        "wires": []
    },
    {
        "id": "8568dc3c.c337a",
        "type": "function",
        "z": "305c6dd9.7f9612",
        "name": "sunrise",
        "func": "var sunrise = msg.payload.results.sunrise;\nsunrise = sunrise.substr(11,5);\nglobal.set('Sunrise', sunrise);\n\n// sunrise minute\nvar riseHourText = sunrise.substr(0, 2);\nvar riseMinuteText = sunrise.substr(3, 2);\nvar riseMinuteNumber = Number(riseHourText) * 60 + Number(riseMinuteText);\nglobal.set('SunriseMinute', riseMinuteNumber, 'file'); \n\nmsg.payload = flow.get('FontUebersicht') + sunrise;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 480,
        "wires": [
            [
                "7959aa56.013ee4"
            ]
        ]
    },
    {
        "id": "b4ef107b.e6375",
        "type": "function",
        "z": "305c6dd9.7f9612",
        "name": "solar_noon",
        "func": "var solar_noon = msg.payload.results.solar_noon;\nsolar_noon = solar_noon.substr(11, 5);\nglobal.set('solar_noon', solar_noon);\n\n// solar_noonMinute\nvar noonHourText = solar_noon.substr(0, 2);\nvar noonMinuteText = solar_noon.substr(3, 2);\nvar noonMinuteNumber = Number(noonHourText) * 60 + Number(noonMinuteText);\nglobal.set('solar_noonMinute', noonMinuteNumber, 'file');\n\nmsg.payload = flow.get('FontUebersicht') + solar_noon;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 580,
        "wires": [
            [
                "c4a1be1.e9dd44"
            ]
        ]
    },
    {
        "id": "9802cf79.a5ffa",
        "type": "function",
        "z": "305c6dd9.7f9612",
        "name": "sunset",
        "func": "var sunset = msg.payload.results.sunset;\nsunset = sunset.substr(11, 5);\nglobal.set('Sunset', sunset);\n\n// sunset minute\nvar setHourText = sunset.substr(0, 2);\nvar setMinuteText = sunset.substr(3, 2);\nvar setMinuteNumber = Number(setHourText) * 60 + Number(setMinuteText);\nglobal.set('SunsetMinute', setMinuteNumber, 'file'); \n\nmsg.payload = flow.get('FontUebersicht') + sunset;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 700,
        "wires": [
            [
                "9072cc52.1ec49"
            ]
        ]
    },
    {
        "id": "4b0f1648.1fba38",
        "type": "function",
        "z": "305c6dd9.7f9612",
        "name": "date",
        "func": "var date = msg.payload.results.sunset;\nmsg.payload = flow.get('FontUebersicht') + date;\nvar year = date.substr(0,4);\nvar month = date.substr(5,2);\nvar day = date.substr(8,2);\nmsg.payload =flow.get('FontUebersicht') + day+\".\"+month+\".\"+year;\n\nglobal.set('date', date.substr(0,4) + \"/\" + date.substr(5,2) + \"/\" + date.substr(8,2));\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 780,
        "wires": [
            [
                "f0b889f1.a064f8"
            ]
        ]
    },
    {
        "id": "2fe0d529.7e4dca",
        "type": "function",
        "z": "305c6dd9.7f9612",
        "name": "rain",
        "func": "var rain = global.get('07IN1_Rain');\nif (rain) {\n  msg.payload = flow.get('FontUebersicht') + \"Regen\" ;\n} else {\n  msg.payload = flow.get('FontUebersicht') + \"Kein Regen\" ;\n}\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 1480,
        "wires": [
            [
                "3bde9cbf.26fcb4"
            ]
        ]
    },
    {
        "id": "41753025.652ac",
        "type": "function",
        "z": "305c6dd9.7f9612",
        "name": "AI_ChangeOfRain",
        "func": "\nlet x = msg.payload.precipitation_perc;\nglobal.set('AI_ChangeOfRain', x);\n\nmsg.payload = flow.get('FontUebersicht') + x + \" %\"\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 1280,
        "wires": [
            [
                "f396a8a0.182d78"
            ]
        ]
    },
    {
        "id": "1e4f4b5a.3ac5d5",
        "type": "function",
        "z": "305c6dd9.7f9612",
        "name": "AI_humidity",
        "func": "\nlet x = msg.payload.humidity;\nglobal.set('AI_humidity', x);\n\nmsg.payload = flow.get('FontUebersicht') + x + \" %\"\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 622,
        "y": 1376,
        "wires": [
            [
                "d1c29078.64484"
            ]
        ]
    },
    {
        "id": "37b2c48.5fc853c",
        "type": "function",
        "z": "305c6dd9.7f9612",
        "name": "FontUebersicht",
        "func": "let x = '<font size = 16><font color = blue>';\nflow.set('FontUebersicht', x);\nmsg.payload = x;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "1502cb78.076475",
        "type": "ui_text",
        "z": "305c6dd9.7f9612",
        "group": "6752cf8bb4d6264e",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1110,
        "y": 360,
        "wires": []
    },
    {
        "id": "dda54879.9a1f48",
        "type": "ui_text",
        "z": "305c6dd9.7f9612",
        "group": "5c960cfb609cc93c",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1050,
        "y": 1040,
        "wires": []
    },
    {
        "id": "1595a4bc.67ecfb",
        "type": "ui_text",
        "z": "305c6dd9.7f9612",
        "group": "0d643f19a234b1e3",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Maximale Windböe innerhalb der letzten Stunde",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1160,
        "y": 1160,
        "wires": []
    },
    {
        "id": "7959aa56.013ee4",
        "type": "ui_text",
        "z": "305c6dd9.7f9612",
        "group": "20f7b488a22475a9",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1490,
        "y": 480,
        "wires": []
    },
    {
        "id": "c4a1be1.e9dd44",
        "type": "ui_text",
        "z": "305c6dd9.7f9612",
        "group": "55cfe9a3f630dc38",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1470,
        "y": 580,
        "wires": []
    },
    {
        "id": "9072cc52.1ec49",
        "type": "ui_text",
        "z": "305c6dd9.7f9612",
        "group": "021ba68479d1aae5",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1490,
        "y": 700,
        "wires": []
    },
    {
        "id": "f0b889f1.a064f8",
        "type": "ui_text",
        "z": "305c6dd9.7f9612",
        "group": "956a7397bc0e915e",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1490,
        "y": 780,
        "wires": []
    },
    {
        "id": "3bde9cbf.26fcb4",
        "type": "ui_text",
        "z": "305c6dd9.7f9612",
        "group": "f513320a4481d386",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 870,
        "y": 1480,
        "wires": []
    },
    {
        "id": "f396a8a0.182d78",
        "type": "ui_text",
        "z": "305c6dd9.7f9612",
        "group": "e8347c42c79e06a8",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1050,
        "y": 1280,
        "wires": []
    },
    {
        "id": "d1c29078.64484",
        "type": "ui_text",
        "z": "305c6dd9.7f9612",
        "group": "1ca180f72b81918c",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 930,
        "y": 1380,
        "wires": []
    },
    {
        "id": "feca8d4a.d9a86",
        "type": "timestamp",
        "z": "305c6dd9.7f9612",
        "name": "time",
        "x": 430,
        "y": 360,
        "wires": [
            [
                "19133ae9.fd9765"
            ]
        ]
    },
    {
        "id": "b43387f0.675958",
        "type": "dwdweather",
        "z": "305c6dd9.7f9612",
        "name": "Böblingen",
        "mosmixStation": "K2913",
        "lookAheadHours": "0",
        "additionalFields": "FX1",
        "omitMessageOnStart": true,
        "repeat": "0",
        "topic": "",
        "x": 420,
        "y": 1089,
        "wires": [
            [
                "7b8a9283.e3cefc",
                "bd2eb842.8af0c8",
                "41753025.652ac",
                "1e4f4b5a.3ac5d5"
            ]
        ]
    },
    {
        "id": "adf8a4e22542ad79",
        "type": "comment",
        "z": "305c6dd9.7f9612",
        "name": "msg.url = \"https://api.sunrise-sunset.org/json?&formatted=0&tzid=Europe/Berlin&lat=48.6429777&lng=9.004596,19\";",
        "info": "",
        "x": 590,
        "y": 700,
        "wires": []
    },
    {
        "id": "264b302de38c4ba5",
        "type": "inject",
        "z": "305c6dd9.7f9612",
        "name": "intervall 2 sec",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 1480,
        "wires": [
            [
                "2fe0d529.7e4dca"
            ]
        ]
    },
    {
        "id": "94bcebc51b54876a",
        "type": "comment",
        "z": "305c6dd9.7f9612",
        "name": "FX1 Maximale Windböe innerhalb der letzten Stunde",
        "info": "",
        "x": 790,
        "y": 1100,
        "wires": []
    },
    {
        "id": "9a782ceb.a80e4",
        "type": "http request",
        "z": "305c6dd9.7f9612",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 770,
        "y": 520,
        "wires": [
            [
                "8568dc3c.c337a",
                "b4ef107b.e6375",
                "9802cf79.a5ffa",
                "4b0f1648.1fba38"
            ]
        ]
    },
    {
        "id": "0b2f4bf0c0562a77",
        "type": "inject",
        "z": "305c6dd9.7f9612",
        "name": "once",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 134.1990966796875,
        "y": 193.20614624023438,
        "wires": [
            [
                "9077deca9623f4d6"
            ]
        ]
    },
    {
        "id": "9077deca9623f4d6",
        "type": "function",
        "z": "305c6dd9.7f9612",
        "name": "init global Contex",
        "func": "global.set('WindSpeedMax',0.0);\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 414.1990966796875,
        "y": 193.20614624023438,
        "wires": [
            []
        ]
    },
    {
        "id": "7fd6493.2450cb8",
        "type": "comment",
        "z": "951993f4.8206d",
        "name": "Windgeschwindigkeit",
        "info": "",
        "x": 120,
        "y": 80,
        "wires": []
    },
    {
        "id": "46859144.bb458",
        "type": "comment",
        "z": "951993f4.8206d",
        "name": "Flow BV_WindAlarm",
        "info": "",
        "x": 370,
        "y": 80,
        "wires": []
    },
    {
        "id": "db8e62b9.cf8df",
        "type": "inject",
        "z": "951993f4.8206d",
        "name": "2s timestamp",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 700,
        "wires": [
            [
                "f40e5390.8246b",
                "b6b25b22.db7dc8"
            ]
        ]
    },
    {
        "id": "f40e5390.8246b",
        "type": "function",
        "z": "951993f4.8206d",
        "name": "AI_windSpeed",
        "func": "msg.payload = Number(global.get('AV_WindMax'));\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 600,
        "wires": [
            [
                "6e9a1a2b3cabbb63"
            ]
        ]
    },
    {
        "id": "bf465e27.4fc6a",
        "type": "function",
        "z": "951993f4.8206d",
        "name": "BV_WindMeasureActive",
        "func": "flow.set('BV_WindMeasureActive', msg.payload);\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "b6b25b22.db7dc8",
        "type": "function",
        "z": "951993f4.8206d",
        "name": "Calculate BV_WindAlarm",
        "func": "var alarm = false;\nvar active = flow.get('BV_WindMeasureActive');\nif (global.get('AV_WindMax') <= flow.get('AI_speedHighLimit')) {\n    alarm = false;\n}\nelse {\n    alarm = true;\n}\n\nif (alarm && active) {\n    msg.payload = '<font size = 16><font color = red>' + 'Alarm';\n    global.set('BV_WindAlarm1', true);\n}\nif (!alarm && active) {\n    msg.payload = '<font size = 16><font color = green>' + 'Kein Alarm';\n    global.set('BV_WindAlarm1', false);\n}\nif (!active) {\n    msg.payload = 'Windschutz Funktion nicht aktiv!';\n    global.set('BV_WindAlarm1', false);\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 700,
        "wires": [
            [
                "4a680ed27bbee30a",
                "6ae826241c391281"
            ]
        ]
    },
    {
        "id": "33d74c4b.ae43c4",
        "type": "comment",
        "z": "951993f4.8206d",
        "name": "Niederschlag",
        "info": "",
        "x": 90,
        "y": 900,
        "wires": []
    },
    {
        "id": "ef1b7795.2a4dd8",
        "type": "function",
        "z": "951993f4.8206d",
        "name": "AV_ChanceOfRainLimit",
        "func": "flow.set('AV_ChanceOfRainLimit', msg.payload);\nreturn msg;\n\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "b46322d1.aa8b8",
        "type": "comment",
        "z": "951993f4.8206d",
        "name": "Flow BV_RainAlarm",
        "info": "",
        "x": 270,
        "y": 900,
        "wires": []
    },
    {
        "id": "4ce02a2f.e3c5c4",
        "type": "inject",
        "z": "951993f4.8206d",
        "name": "2s timestamp",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 133,
        "y": 1466,
        "wires": [
            [
                "4509bf7b.d08de",
                "4a3651bd.bc95a",
                "74cfbb95.afb0a4"
            ]
        ]
    },
    {
        "id": "4509bf7b.d08de",
        "type": "function",
        "z": "951993f4.8206d",
        "name": "AI_ChangeOfRain",
        "func": "msg.payload = Number(global.get('AI_ChangeOfRain'));\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 1380,
        "wires": [
            [
                "0320eee2fd222559"
            ]
        ]
    },
    {
        "id": "4a3651bd.bc95a",
        "type": "function",
        "z": "951993f4.8206d",
        "name": "07IN1_Rain",
        "func": "var rain = global.get('07IN1_Rain');\nif (rain == 1) {\n  msg.payload = \"Regen\" ;\n} \nelse {\n  msg.payload = \"Kein Regen\" ;\n}\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 1320,
        "wires": [
            [
                "c744852d3c7ff422"
            ]
        ]
    },
    {
        "id": "74cfbb95.afb0a4",
        "type": "function",
        "z": "951993f4.8206d",
        "name": "Calculate BV_RainAlarm",
        "func": "var limit = flow.get('AV_ChanceOfRainLimit');\nvar chanceOfRain = global.get('AI_ChangeOfRain');\nvar active = flow.get('BV_RainActive');\nvar alarm1 = global.get('07IN1_Rain');\nvar alarm2 = chanceOfRain >= limit;\nvar alarm = alarm1 || alarm2;\n\nif (alarm && active) {\n    msg.payload = '<font size = 16><font color = red>' + 'Alarm';\n    global.set('BV_RainAlarm1', true);\n}\nif (!alarm && active) {\n    msg.payload = '<font size = 16><font color = green>' + 'Kein Alarm';\n    global.set('BV_RainAlarm1', false);\n}\nif (!active) {\n    msg.payload = 'Niederschlagschutz Funktion nicht aktiv!';\n    global.set('BV_RainAlarm1', false);\n}\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 1460,
        "wires": [
            [
                "623d40e040b15d8e",
                "b6e08105ffd85c3c"
            ]
        ]
    },
    {
        "id": "c17ab526119a92dd",
        "type": "function",
        "z": "951993f4.8206d",
        "name": "AI_speedHighLimit",
        "func": "flow.set('AI_speedHighLimit', msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "53b6edee4ac8d11f",
        "type": "function",
        "z": "951993f4.8206d",
        "name": "BV_RainActive",
        "func": "flow.set('BV_RainActive', msg.payload);\nreturn msg;\n\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "eb0dd29ce97b80c6",
        "type": "comment",
        "z": "951993f4.8206d",
        "name": "Zeitprogramm",
        "info": "",
        "x": 150,
        "y": 1620,
        "wires": []
    },
    {
        "id": "907fbbe8fb385804",
        "type": "comment",
        "z": "951993f4.8206d",
        "name": "Flow BV_Schedule",
        "info": "",
        "x": 430,
        "y": 1620,
        "wires": []
    },
    {
        "id": "2c11e35583775d53",
        "type": "function",
        "z": "951993f4.8206d",
        "name": "BV_ScheduleActive",
        "func": "flow.set('BV_ScheduleActive', msg.payload);\nreturn msg;\n\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1720,
        "wires": [
            []
        ]
    },
    {
        "id": "7893c1f60ad744ce",
        "type": "function",
        "z": "951993f4.8206d",
        "name": "flow.get",
        "func": "msg.payload = flow.get('AI_speedHighLimit');\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 440,
        "wires": [
            [
                "8b55b3f20bb6c3d4"
            ]
        ]
    },
    {
        "id": "27431193110e4851",
        "type": "function",
        "z": "951993f4.8206d",
        "name": "flow.get",
        "func": "msg.payload = flow.get('BV_WindMeasureActive');\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 200,
        "wires": [
            [
                "89dc178a57615118"
            ]
        ]
    },
    {
        "id": "14b41ce8835d7af2",
        "type": "function",
        "z": "951993f4.8206d",
        "name": "flow.get",
        "func": "\nmsg.payload = flow.get('BV_RainActive');\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 960,
        "wires": [
            [
                "4c8767dc2180b4f7"
            ]
        ]
    },
    {
        "id": "9e25c6d2aade8067",
        "type": "function",
        "z": "951993f4.8206d",
        "name": "flow.get",
        "func": "msg.payload = flow.get('AV_ChanceOfRainLimit');\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 1040,
        "wires": [
            [
                "28088e4e28917526"
            ]
        ]
    },
    {
        "id": "fed9a2e527260790",
        "type": "function",
        "z": "951993f4.8206d",
        "name": "flow.get",
        "func": "msg.payload = flow.get('BV_ScheduleActive');\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 1720,
        "wires": [
            [
                "2bc7a08f249fc8d7"
            ]
        ]
    },
    {
        "id": "3c5859c503158d11",
        "type": "inject",
        "z": "951993f4.8206d",
        "name": "Once a time string",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 130,
        "y": 240,
        "wires": [
            [
                "27431193110e4851",
                "7893c1f60ad744ce"
            ]
        ]
    },
    {
        "id": "bda4baf44a13c310",
        "type": "inject",
        "z": "951993f4.8206d",
        "name": "Once a time string",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 150,
        "y": 1000,
        "wires": [
            [
                "14b41ce8835d7af2",
                "9e25c6d2aade8067"
            ]
        ]
    },
    {
        "id": "36d16c3a5aab4b43",
        "type": "inject",
        "z": "951993f4.8206d",
        "name": "Once a time string",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 130,
        "y": 1720,
        "wires": [
            [
                "fed9a2e527260790"
            ]
        ]
    },
    {
        "id": "dce06dceb3e068e8",
        "type": "inject",
        "z": "951993f4.8206d",
        "name": "2s string",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 100,
        "y": 2100,
        "wires": [
            [
                "e90bd963b62853aa"
            ]
        ]
    },
    {
        "id": "e90bd963b62853aa",
        "type": "function",
        "z": "951993f4.8206d",
        "name": "Calculate' BV_Schedule",
        "func": "var x = flow.get('BO_ScheduleOutDown');\nvar y = false;\nvar active = flow.get('BV_ScheduleActive');\n\n// Schedule calcuculate\nif (x && active) {\n    y = true;\n    msg.payload ='<font size = 16><font color = blue>' + 'Unten';    \n} \nif ( !x && active) {\n    y = false;\n    msg.payload ='<font size = 16><font color = blue>' + 'Oben'; \n} \n// not active\nif (!active) {\n    y = false;\n    msg.payload ='Funktion nicht aktiv!'; \n}\nflow.set('BV_Schedule', y );\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 2100,
        "wires": [
            [
                "1e868a064385f86b"
            ]
        ]
    },
    {
        "id": "e3b88b233b314d75",
        "type": "comment",
        "z": "951993f4.8206d",
        "name": "Sonnenstand",
        "info": "",
        "x": 110,
        "y": 2320,
        "wires": []
    },
    {
        "id": "129f90178c35d299",
        "type": "comment",
        "z": "951993f4.8206d",
        "name": "Flow BV_Sun",
        "info": "",
        "x": 370,
        "y": 2320,
        "wires": []
    },
    {
        "id": "eafe9327d838895d",
        "type": "function",
        "z": "951993f4.8206d",
        "name": "Sunrise",
        "func": "msg.payload = '<font color= blue>' + global.get('Sunrise');\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 2600,
        "wires": [
            [
                "fb02598f4dbffe55"
            ]
        ]
    },
    {
        "id": "040167c1f3a41820",
        "type": "function",
        "z": "951993f4.8206d",
        "name": "solar_noon",
        "func": "msg.payload = '<font color= blue>' + global.get('solar_noon');\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 2660,
        "wires": [
            [
                "70a94d3ae8b5d1e9"
            ]
        ]
    },
    {
        "id": "7978eb876d8fdc16",
        "type": "function",
        "z": "951993f4.8206d",
        "name": "Sunset",
        "func": "msg.payload = '<font color= blue>' + global.get('Sunset');\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 2720,
        "wires": [
            [
                "fe7b4a395757bfca"
            ]
        ]
    },
    {
        "id": "fb02598f4dbffe55",
        "type": "ui_text",
        "z": "951993f4.8206d",
        "group": "3a1c8458509d8435",
        "order": 3,
        "width": "",
        "height": "",
        "name": "Sunrise",
        "label": "Sonnenaufgang",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1120,
        "y": 2600,
        "wires": []
    },
    {
        "id": "70a94d3ae8b5d1e9",
        "type": "ui_text",
        "z": "951993f4.8206d",
        "group": "3a1c8458509d8435",
        "order": 4,
        "width": "",
        "height": "",
        "name": "solar_noon",
        "label": "Sonnenhöchststand",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1130,
        "y": 2660,
        "wires": []
    },
    {
        "id": "fe7b4a395757bfca",
        "type": "ui_text",
        "z": "951993f4.8206d",
        "group": "3a1c8458509d8435",
        "order": 5,
        "width": "",
        "height": "",
        "name": "sunset",
        "label": "Sonnenuntergang",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1130,
        "y": 2720,
        "wires": []
    },
    {
        "id": "b55d5bd0809e199b",
        "type": "function",
        "z": "951993f4.8206d",
        "name": "timeShort",
        "func": "msg.payload = '<font color= blue>' + global.get('timeShort');\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 2500,
        "wires": [
            [
                "4298c354cc677249"
            ]
        ]
    },
    {
        "id": "4298c354cc677249",
        "type": "ui_text",
        "z": "951993f4.8206d",
        "group": "3a1c8458509d8435",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "timeShort",
        "label": "Uhrzeit",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1140,
        "y": 2500,
        "wires": []
    },
    {
        "id": "ff0b0927286ed943",
        "type": "inject",
        "z": "951993f4.8206d",
        "name": "2s string",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 180,
        "y": 2500,
        "wires": [
            [
                "b55d5bd0809e199b",
                "eafe9327d838895d",
                "040167c1f3a41820",
                "7978eb876d8fdc16"
            ]
        ]
    },
    {
        "id": "43328a7ab1222bd6",
        "type": "comment",
        "z": "951993f4.8206d",
        "name": "Motor",
        "info": "",
        "x": 210,
        "y": 3080,
        "wires": []
    },
    {
        "id": "eddf23553aaf616a",
        "type": "inject",
        "z": "951993f4.8206d",
        "name": "2s string",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "payload": "empty",
        "payloadType": "str",
        "x": 240,
        "y": 3180,
        "wires": [
            [
                "d284cf309b29ad04"
            ]
        ]
    },
    {
        "id": "9e5fe1e3a9153e1e",
        "type": "comment",
        "z": "951993f4.8206d",
        "name": "repeat alarm",
        "info": "",
        "x": 490,
        "y": 3080,
        "wires": []
    },
    {
        "id": "7fcd61c67dd4c6f8",
        "type": "comment",
        "z": "951993f4.8206d",
        "name": "Remote Controll is in Controllino -programm",
        "info": "",
        "x": 810,
        "y": 3080,
        "wires": []
    },
    {
        "id": "557e11018b4ef596",
        "type": "file",
        "z": "951993f4.8206d",
        "name": "Log write file",
        "filename": "~/.node-red/context/Log.txt",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1130,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "4a680ed27bbee30a",
        "type": "function",
        "z": "951993f4.8206d",
        "name": "JalausielWindAlarmToFileCSV",
        "func": "// alarm\nvar x = global.get('BV_WindAlarm1');\nvar xOld = global.get('BV_WindAlarm1Old');\n\nif (!x) {\n  msg.payload = global.get('date') + \" \" + global.get('time') + \",\" + \"Jalausie,\" + \"Windschutz,\" + \"Normal\"\n};\nif (x) {\n  msg.payload = global.get('date') + \" \" + global.get('time') + \",\" + \"Jalausie,\" +\"Windschutz,\" +  \"Alarm\"   \n};\n\nif (xOld !== x) {\n  global.set('BV_WindAlarm1Old', x);\n  return msg;\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 780,
        "wires": [
            [
                "557e11018b4ef596"
            ]
        ]
    },
    {
        "id": "53de961b8387169f",
        "type": "file",
        "z": "951993f4.8206d",
        "name": "Log write file",
        "filename": "~/.node-red/context/Log.txt",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1110,
        "y": 1520,
        "wires": [
            []
        ]
    },
    {
        "id": "623d40e040b15d8e",
        "type": "function",
        "z": "951993f4.8206d",
        "name": "JalausielRainAlarmToFileCSV",
        "func": "// alarm\nvar x = global.get('BV_RainAlarm1');\nvar xOld = global.get('BV_RainAlarm1Old');\n\nif (!x) {\n  msg.payload = global.get('date') + \" \" + global.get('time') + \",\" + \"Jalausie,\" + \"Niederschlagschutz,\" + \"Normal\"\n};\nif (x) {\n  msg.payload = global.get('date') + \" \" + global.get('time') + \",\" + \"Jalausie,\" + \"Niederschlagschutz,\" + \"Alarm\"\n};\n\nif (xOld !== x) {\n  global.set('BV_RainAlarm1Old', x);\n  return msg;\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1520,
        "wires": [
            [
                "53de961b8387169f"
            ]
        ]
    },
    {
        "id": "5a10f12b49835624",
        "type": "inject",
        "z": "951993f4.8206d",
        "name": "once",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 140,
        "wires": [
            [
                "4ba9a9524f485de9"
            ]
        ]
    },
    {
        "id": "4ba9a9524f485de9",
        "type": "function",
        "z": "951993f4.8206d",
        "name": "init flow Contex",
        "func": "global.set('BV_RainAlarmOld1',false);\nglobal.set('BV_WindAlarmOld1',false);\n\nflow.set('StampDown', Date.now());\nflow.set('StampUp', Date.now());\nflow.set('DurationDown', Date.now());\nflow.set('DurationUp', Date.now());\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "d284cf309b29ad04",
        "type": "function",
        "z": "951993f4.8206d",
        "name": "50000CHANNEL1UP and 50001CHANNEL1DOWN",
        "func": "// 50000CHANNEL1UP       y101->Up\n// 50001CHANNEL1DOWN     y102 -> Down\n\nvar stampUp = flow.get('StampUp');\nvar stampDown = flow.get('StampDown');\nvar durationDown = Date.now() - stampDown;\nflow.set('DurationDown', durationDown);           //Flow variable for debuging\nvar durationUp = Date.now() - stampUp;\nflow.set('DurationUp', durationUp);               //Flow variable for debuging\nvar time1 = 10000; // ms\nvar time2 = 70000; // ms\nvar time3 = 7200000; // ms 2 hours\n\n// alarm expression\nvar alarm1 = global.get('BV_RainAlarm1');\nvar alarm2 = global.get('BV_WindAlarm1');\n\n// schedule  expression\nvar x = flow.get('BV_Schedule');\n\n// Down function\nif (x && !alarm1 && !alarm2) {\n     flow.set('StampUp', Date.now()); // Timestamp for up !!!!\n     // wait 10s\n     stampDown = flow.get('StampDown');\n     \n     if (durationDown < time1) {\n          global.set('50000CHANNEL1UP', false);\n          global.set('50001CHANNEL1DOWN', false);  \n     }\n     if (durationDown < time2 && durationDown > time1) {\n          global.set('50000CHANNEL1UP', false);\n          global.set('50001CHANNEL1DOWN', true); \n     }\n     if (durationDown < time3 && durationDown > time2) {\n          global.set('50000CHANNEL1UP', false);\n          global.set('50001CHANNEL1DOWN', false); \n     } \n     flow.set('StampUp', Date.now());   // Timestamp for up  \n     return msg;  \n}\n//Up function\nelse {\n     flow.set('StampDown', Date.now()); // Timestamp for down !!!!\n      //wait 10s\n     stampUp = Number(flow.get('StampUp'));\n     if (durationUp < time1) {\n          global.set('50000CHANNEL1UP', false);\n          global.set('50001CHANNEL1DOWN', false);\n     }\n     if (durationUp < time2 && durationUp > time1) {\n          global.set('50000CHANNEL1UP', true);\n          global.set('50001CHANNEL1DOWN', false); \n     }\n     // wait 60s Motorlaufzeit\n     if (durationUp < time3 && durationUp > time2) {\n          global.set('50000CHANNEL1UP', false);\n          global.set('50001CHANNEL1DOWN', false); \n     }\n     // wait 2h repeat alarm\n     if (durationUp > time3 && (alarm1 || alarm2)) {\n         flow.set('StampUp', Date.now())\n     }\n     flow.set('StampDown', Date.now()); // Timestamp for down\n     return msg;\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 3180,
        "wires": [
            []
        ]
    },
    {
        "id": "89dc178a57615118",
        "type": "ui_dropdown",
        "z": "951993f4.8206d",
        "name": "",
        "label": "Windschutz",
        "tooltip": "Windschutz",
        "place": "Select option",
        "group": "d90c12143c2e28b4",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "nicht aktiv",
                "value": false,
                "type": "bool"
            },
            {
                "label": "aktiv",
                "value": true,
                "type": "bool"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 810,
        "y": 200,
        "wires": [
            [
                "bf465e27.4fc6a"
            ]
        ]
    },
    {
        "id": "8b55b3f20bb6c3d4",
        "type": "ui_slider",
        "z": "951993f4.8206d",
        "name": "AI_speedHighLimit",
        "label": "Grenzwert in km/h",
        "tooltip": "Grenzwert Windgeschwindigkeit",
        "group": "d90c12143c2e28b4",
        "order": 3,
        "width": "",
        "height": "",
        "passthru": true,
        "outs": "end",
        "topic": "",
        "topicType": "str",
        "min": 0,
        "max": "70",
        "step": "5",
        "className": "",
        "x": 830,
        "y": 440,
        "wires": [
            [
                "c17ab526119a92dd"
            ]
        ]
    },
    {
        "id": "6ae826241c391281",
        "type": "ui_text",
        "z": "951993f4.8206d",
        "group": "d90c12143c2e28b4",
        "order": 6,
        "width": "",
        "height": "",
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 870,
        "y": 700,
        "wires": []
    },
    {
        "id": "6e9a1a2b3cabbb63",
        "type": "ui_gauge",
        "z": "951993f4.8206d",
        "name": "Windgeschwindigkeit",
        "group": "d90c12143c2e28b4",
        "order": 2,
        "width": "",
        "height": "",
        "gtype": "gage",
        "title": "Maximale Windböe innerhalb der letzten Stunde",
        "label": "",
        "format": "{{value}}km/h",
        "min": "0.0",
        "max": "70",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 980,
        "y": 600,
        "wires": []
    },
    {
        "id": "28088e4e28917526",
        "type": "ui_slider",
        "z": "951993f4.8206d",
        "name": "AV_ChanceOfRainLimit",
        "label": "Grenzwert in %",
        "tooltip": "Grenzwert Regenwahrscheinlichkeit",
        "group": "f38a2925ce1a334a",
        "order": 4,
        "width": "",
        "height": "",
        "passthru": true,
        "outs": "end",
        "topic": "",
        "topicType": "str",
        "min": 0,
        "max": "100",
        "step": "5",
        "className": "",
        "x": 730,
        "y": 1040,
        "wires": [
            [
                "ef1b7795.2a4dd8"
            ]
        ]
    },
    {
        "id": "4c8767dc2180b4f7",
        "type": "ui_dropdown",
        "z": "951993f4.8206d",
        "name": "",
        "label": "Niederschlagschutz",
        "tooltip": "Niederschlagschutz",
        "place": "Select option",
        "group": "f38a2925ce1a334a",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "nicht aktiv",
                "value": false,
                "type": "bool"
            },
            {
                "label": "aktiv",
                "value": true,
                "type": "bool"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 710,
        "y": 960,
        "wires": [
            [
                "53b6edee4ac8d11f"
            ]
        ]
    },
    {
        "id": "0320eee2fd222559",
        "type": "ui_gauge",
        "z": "951993f4.8206d",
        "name": "AI_ChangeOfRain",
        "group": "f38a2925ce1a334a",
        "order": 3,
        "width": "",
        "height": "",
        "gtype": "gage",
        "title": "Regenwahrscheinlichkeit",
        "label": "",
        "format": "{{value}} %",
        "min": "0.0",
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 890,
        "y": 1380,
        "wires": []
    },
    {
        "id": "b6e08105ffd85c3c",
        "type": "ui_text",
        "z": "951993f4.8206d",
        "group": "f38a2925ce1a334a",
        "order": 7,
        "width": "",
        "height": "",
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 890,
        "y": 1460,
        "wires": []
    },
    {
        "id": "c744852d3c7ff422",
        "type": "ui_text",
        "z": "951993f4.8206d",
        "group": "f38a2925ce1a334a",
        "order": 2,
        "width": "",
        "height": "",
        "name": "Regen",
        "label": "Regen",
        "format": "{{msg.payload}}",
        "layout": "",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 870,
        "y": 1320,
        "wires": []
    },
    {
        "id": "1e868a064385f86b",
        "type": "ui_text",
        "z": "951993f4.8206d",
        "group": "14ea130f6e6b7405",
        "order": "6",
        "width": "",
        "height": "",
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 790,
        "y": 2100,
        "wires": []
    },
    {
        "id": "2bc7a08f249fc8d7",
        "type": "ui_dropdown",
        "z": "951993f4.8206d",
        "name": "",
        "label": "Zeitprogramm",
        "tooltip": "Zeitprogramm",
        "place": "Select option",
        "group": "14ea130f6e6b7405",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "nicht aktiv",
                "value": false,
                "type": "bool"
            },
            {
                "label": "aktiv",
                "value": true,
                "type": "bool"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 580,
        "y": 1720,
        "wires": [
            [
                "2c11e35583775d53"
            ]
        ]
    },
    {
        "id": "b63638b7ac7d8bd9",
        "type": "comment",
        "z": "951993f4.8206d",
        "name": "google.maps 48.6429777,9.004596",
        "info": "https://www.google.de/maps/place/Annaweg+9,+71088+Holzgerlingen/@48.6429777,9.004596,19",
        "x": 400,
        "y": 1960,
        "wires": []
    },
    {
        "id": "4b8baf48c4e8536a",
        "type": "comment",
        "z": "951993f4.8206d",
        "name": "### This scenario is permanent and requires a file to read an write to ###",
        "info": "",
        "x": 420,
        "y": 1840,
        "wires": []
    },
    {
        "id": "cb7b164418cb4fd9",
        "type": "inject",
        "z": "951993f4.8206d",
        "name": "FireAfterReboot",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 1900,
        "wires": [
            [
                "b847da37993ea459"
            ]
        ]
    },
    {
        "id": "b9799eb32f04ac87",
        "type": "ui_time_scheduler",
        "z": "951993f4.8206d",
        "group": "14ea130f6e6b7405",
        "name": "Zeitprogramm",
        "startDay": "1",
        "refresh": 60,
        "devices": [
            "Jalausie"
        ],
        "singleOff": false,
        "onlySendChange": false,
        "customPayload": false,
        "eventMode": false,
        "eventOptions": [],
        "sendTopic": false,
        "lat": "48.6429777",
        "lon": "9.00459619",
        "customContextStore": "",
        "outputs": 2,
        "order": 1,
        "width": 0,
        "height": 0,
        "x": 620,
        "y": 1900,
        "wires": [
            [
                "7c5940da12f89b36"
            ],
            [
                "219f03c9e1f11c70"
            ]
        ]
    },
    {
        "id": "219f03c9e1f11c70",
        "type": "function",
        "z": "951993f4.8206d",
        "name": "BO_ScheduleOutDown",
        "func": "\nflow.set('BO_ScheduleOutDown', msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 1980,
        "wires": [
            []
        ]
    },
    {
        "id": "b847da37993ea459",
        "type": "function",
        "z": "951993f4.8206d",
        "name": "flow.get Schedule text",
        "func": "msg.payload = flow.get('Schedule');\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 1900,
        "wires": [
            [
                "b9799eb32f04ac87"
            ]
        ]
    },
    {
        "id": "7c5940da12f89b36",
        "type": "function",
        "z": "951993f4.8206d",
        "name": "flow.set Schedule text",
        "func": "flow.set('Schedule',msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 1880,
        "wires": [
            []
        ]
    },
    {
        "id": "4dc541783e54557c",
        "type": "comment",
        "z": "812b0ff61703e7f7",
        "name": "Windgeschwindigkeit",
        "info": "",
        "x": 180,
        "y": 60,
        "wires": []
    },
    {
        "id": "4103ccc4bb990fc8",
        "type": "comment",
        "z": "812b0ff61703e7f7",
        "name": "Flow BV_WindAlarm",
        "info": "",
        "x": 430,
        "y": 60,
        "wires": []
    },
    {
        "id": "43e72043c9993124",
        "type": "inject",
        "z": "812b0ff61703e7f7",
        "name": "2s timestamp",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 680,
        "wires": [
            [
                "38c629de0f29cc95",
                "d6046c7587566508"
            ]
        ]
    },
    {
        "id": "38c629de0f29cc95",
        "type": "function",
        "z": "812b0ff61703e7f7",
        "name": "AI_windSpeed",
        "func": "msg.payload = Number(global.get('AV_WindMax'));\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 580,
        "wires": [
            [
                "24eced0b58833e21"
            ]
        ]
    },
    {
        "id": "bab64d9eba152799",
        "type": "function",
        "z": "812b0ff61703e7f7",
        "name": "BV_WindMeasureActive",
        "func": "flow.set('BV_WindMeasureActive', msg.payload);\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1370,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "b1ee2fc0ea7c1e12",
        "type": "comment",
        "z": "812b0ff61703e7f7",
        "name": "Niederschlag",
        "info": "",
        "x": 150,
        "y": 880,
        "wires": []
    },
    {
        "id": "342514b78b14b3e8",
        "type": "function",
        "z": "812b0ff61703e7f7",
        "name": "AV_ChanceOfRainLimit",
        "func": "flow.set('AV_ChanceOfRainLimit', msg.payload);\nreturn msg;\n\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "94e0556694c18a9e",
        "type": "comment",
        "z": "812b0ff61703e7f7",
        "name": "Flow BV_RainAlarm",
        "info": "",
        "x": 330,
        "y": 880,
        "wires": []
    },
    {
        "id": "09af83db0bb6db60",
        "type": "inject",
        "z": "812b0ff61703e7f7",
        "name": "2s timestamp",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 193,
        "y": 1446,
        "wires": [
            [
                "2607e42083203c64",
                "c4f028f35190a1fb",
                "82e4f9eb11577a92"
            ]
        ]
    },
    {
        "id": "2607e42083203c64",
        "type": "function",
        "z": "812b0ff61703e7f7",
        "name": "AI_ChangeOfRain",
        "func": "msg.payload = Number(global.get('AI_ChangeOfRain'));\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1360,
        "wires": [
            [
                "d401650bb14eb149"
            ]
        ]
    },
    {
        "id": "c4f028f35190a1fb",
        "type": "function",
        "z": "812b0ff61703e7f7",
        "name": "07IN1_Rain",
        "func": "var rain = global.get('07IN1_Rain');\nif (rain == 1) {\n  msg.payload = \"Regen\" ;\n} \nelse {\n  msg.payload = \"Kein Regen\" ;\n}\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1300,
        "wires": [
            [
                "26dc52f825f655f3"
            ]
        ]
    },
    {
        "id": "82e4f9eb11577a92",
        "type": "function",
        "z": "812b0ff61703e7f7",
        "name": "Calculate BV_RainAlarm",
        "func": "var limit = flow.get('AV_ChanceOfRainLimit');\nvar chanceOfRain = global.get('AI_ChangeOfRain');\nvar active = flow.get('BV_RainActive');\nvar alarm1 = global.get('07IN1_Rain');\nvar alarm2 = chanceOfRain >= limit;\nvar alarm = alarm1 || alarm2;\n\nif (alarm && active) {\n    msg.payload = '<font size = 16><font color = red>' + 'Alarm';\n    global.set('BV_RainAlarm2', true);\n}\nif (!alarm && active) {\n    msg.payload = '<font size = 16><font color = green>' + 'Kein Alarm';\n    global.set('BV_RainAlarm2', false);\n}\nif (!active) {\n    msg.payload = 'Niederschlagschutz Funktion nicht aktiv!';\n    global.set('BV_RainAlarm2', false);\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 1440,
        "wires": [
            [
                "09ad9e97447c1fd5",
                "86b4fc456df659cc"
            ]
        ]
    },
    {
        "id": "54816ad47bc195fb",
        "type": "function",
        "z": "812b0ff61703e7f7",
        "name": "AI_speedHighLimit",
        "func": "flow.set('AI_speedHighLimit', msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "367cb92b2d79bd32",
        "type": "function",
        "z": "812b0ff61703e7f7",
        "name": "BV_RainActive",
        "func": "flow.set('BV_RainActive', msg.payload);\nreturn msg;\n\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "7210f9469e16ebdb",
        "type": "comment",
        "z": "812b0ff61703e7f7",
        "name": "Zeitprogramm",
        "info": "",
        "x": 210,
        "y": 1600,
        "wires": []
    },
    {
        "id": "39dc6f5cee7444a6",
        "type": "comment",
        "z": "812b0ff61703e7f7",
        "name": "Flow BV_Schedule",
        "info": "",
        "x": 490,
        "y": 1600,
        "wires": []
    },
    {
        "id": "685dfa3db9df0719",
        "type": "function",
        "z": "812b0ff61703e7f7",
        "name": "BV_ScheduleActive",
        "func": "flow.set('BV_ScheduleActive', msg.payload);\nreturn msg;\n\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 1700,
        "wires": [
            []
        ]
    },
    {
        "id": "5ad82ce1184fccf8",
        "type": "function",
        "z": "812b0ff61703e7f7",
        "name": "flow.get",
        "func": "msg.payload = flow.get('AI_speedHighLimit');\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 420,
        "wires": [
            [
                "741369cfd20e27fd"
            ]
        ]
    },
    {
        "id": "f9fd86fa68a48ab1",
        "type": "function",
        "z": "812b0ff61703e7f7",
        "name": "flow.get",
        "func": "msg.payload = flow.get('BV_WindMeasureActive');\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 180,
        "wires": [
            [
                "25b1b894a48e3bf2"
            ]
        ]
    },
    {
        "id": "953ddafe792c8fc7",
        "type": "function",
        "z": "812b0ff61703e7f7",
        "name": "flow.get",
        "func": "\nmsg.payload = flow.get('BV_RainActive');\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 940,
        "wires": [
            [
                "e2ce4dc2ccdacda0"
            ]
        ]
    },
    {
        "id": "369ca8ada58bd4f1",
        "type": "function",
        "z": "812b0ff61703e7f7",
        "name": "flow.get",
        "func": "msg.payload = flow.get('AV_ChanceOfRainLimit');\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 1020,
        "wires": [
            [
                "5ae35509b7974ec3"
            ]
        ]
    },
    {
        "id": "ecbf0eff383ad1e4",
        "type": "function",
        "z": "812b0ff61703e7f7",
        "name": "flow.get",
        "func": "msg.payload = flow.get('BV_ScheduleActive');\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 1700,
        "wires": [
            [
                "26aabd60a0f582ec"
            ]
        ]
    },
    {
        "id": "13eb15dcac3e1996",
        "type": "inject",
        "z": "812b0ff61703e7f7",
        "name": "Once a time string",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 190,
        "y": 220,
        "wires": [
            [
                "f9fd86fa68a48ab1",
                "5ad82ce1184fccf8"
            ]
        ]
    },
    {
        "id": "17b83e3054704697",
        "type": "inject",
        "z": "812b0ff61703e7f7",
        "name": "Once a time string",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 210,
        "y": 980,
        "wires": [
            [
                "953ddafe792c8fc7",
                "369ca8ada58bd4f1"
            ]
        ]
    },
    {
        "id": "a84ed30e696883ab",
        "type": "inject",
        "z": "812b0ff61703e7f7",
        "name": "Once a time string",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 190,
        "y": 1700,
        "wires": [
            [
                "ecbf0eff383ad1e4"
            ]
        ]
    },
    {
        "id": "692a2ee0924eaf02",
        "type": "inject",
        "z": "812b0ff61703e7f7",
        "name": "2s string",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 160,
        "y": 2080,
        "wires": [
            [
                "9b7b41ed3d971049"
            ]
        ]
    },
    {
        "id": "9b7b41ed3d971049",
        "type": "function",
        "z": "812b0ff61703e7f7",
        "name": "Calculate' BV_Schedule",
        "func": "var x = flow.get('BO_ScheduleOutDown');\nvar y = false;\nvar active = flow.get('BV_ScheduleActive');\n\n// Schedule calcuculate\nif (x && active) {\n    y = true;\n    msg.payload ='<font size = 16><font color = blue>' + 'Unten';    \n} \nif ( !x && active) {\n    y = false;\n    msg.payload ='<font size = 16><font color = blue>' + 'Oben'; \n} \n// not active\nif (!active) {\n    y = false;\n    msg.payload ='Funktion nicht aktiv!'; \n}\nflow.set('BV_Schedule', y );\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 2080,
        "wires": [
            [
                "20116d7eecc7092f"
            ]
        ]
    },
    {
        "id": "20d3c16895d75048",
        "type": "comment",
        "z": "812b0ff61703e7f7",
        "name": "Sonnenstand",
        "info": "",
        "x": 170,
        "y": 2300,
        "wires": []
    },
    {
        "id": "fa4750c0de386e71",
        "type": "comment",
        "z": "812b0ff61703e7f7",
        "name": "Flow BV_Sun",
        "info": "",
        "x": 430,
        "y": 2300,
        "wires": []
    },
    {
        "id": "c38298ef6c2bf8ed",
        "type": "function",
        "z": "812b0ff61703e7f7",
        "name": "Sunrise",
        "func": "msg.payload = '<font color= blue>' + global.get('Sunrise');\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 2580,
        "wires": [
            [
                "172586c9207a92f1"
            ]
        ]
    },
    {
        "id": "9af9a5e8bc3d0522",
        "type": "function",
        "z": "812b0ff61703e7f7",
        "name": "solar_noon",
        "func": "msg.payload = '<font color= blue>' + global.get('solar_noon');\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 2640,
        "wires": [
            [
                "9e213c702958ec26"
            ]
        ]
    },
    {
        "id": "3ac2db1eb701ae6b",
        "type": "function",
        "z": "812b0ff61703e7f7",
        "name": "Sunset",
        "func": "msg.payload = '<font color= blue>' + global.get('Sunset');\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 2700,
        "wires": [
            [
                "1c55a260b132d7bf"
            ]
        ]
    },
    {
        "id": "172586c9207a92f1",
        "type": "ui_text",
        "z": "812b0ff61703e7f7",
        "group": "d44f1d1e25036908",
        "order": 3,
        "width": "",
        "height": "",
        "name": "Sunrise",
        "label": "Sonnenaufgang",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1180,
        "y": 2580,
        "wires": []
    },
    {
        "id": "9e213c702958ec26",
        "type": "ui_text",
        "z": "812b0ff61703e7f7",
        "group": "d44f1d1e25036908",
        "order": 4,
        "width": "",
        "height": "",
        "name": "solar_noon",
        "label": "Sonnenhöchststand",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1190,
        "y": 2640,
        "wires": []
    },
    {
        "id": "1c55a260b132d7bf",
        "type": "ui_text",
        "z": "812b0ff61703e7f7",
        "group": "d44f1d1e25036908",
        "order": 5,
        "width": "",
        "height": "",
        "name": "sunset",
        "label": "Sonnenuntergang",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1190,
        "y": 2700,
        "wires": []
    },
    {
        "id": "8e01f7515883a04c",
        "type": "function",
        "z": "812b0ff61703e7f7",
        "name": "timeShort",
        "func": "msg.payload = '<font color= blue>' + global.get('timeShort');\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 2480,
        "wires": [
            [
                "68fdea41ca3e0641"
            ]
        ]
    },
    {
        "id": "68fdea41ca3e0641",
        "type": "ui_text",
        "z": "812b0ff61703e7f7",
        "group": "d44f1d1e25036908",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "timeShort",
        "label": "Uhrzeit",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1200,
        "y": 2480,
        "wires": []
    },
    {
        "id": "01510e6768fcca96",
        "type": "inject",
        "z": "812b0ff61703e7f7",
        "name": "2s string",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 240,
        "y": 2480,
        "wires": [
            [
                "8e01f7515883a04c",
                "c38298ef6c2bf8ed",
                "9af9a5e8bc3d0522",
                "3ac2db1eb701ae6b"
            ]
        ]
    },
    {
        "id": "a74745623b131293",
        "type": "comment",
        "z": "812b0ff61703e7f7",
        "name": "Motor",
        "info": "",
        "x": 250,
        "y": 2960,
        "wires": []
    },
    {
        "id": "fdfe15768a65f785",
        "type": "inject",
        "z": "812b0ff61703e7f7",
        "name": "2s string",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": true,
        "onceDelay": "2",
        "topic": "",
        "payload": "empty",
        "payloadType": "str",
        "x": 300,
        "y": 3160,
        "wires": [
            [
                "03dc47beb2b0a080"
            ]
        ]
    },
    {
        "id": "9fa90126d28c2d04",
        "type": "comment",
        "z": "812b0ff61703e7f7",
        "name": "repeat alarm",
        "info": "",
        "x": 510,
        "y": 2960,
        "wires": []
    },
    {
        "id": "cdcf63bc8d9dd475",
        "type": "comment",
        "z": "812b0ff61703e7f7",
        "name": "Remote Controll is in Controllino -programm",
        "info": "",
        "x": 850,
        "y": 2960,
        "wires": []
    },
    {
        "id": "8e3827144c7d7abc",
        "type": "file",
        "z": "812b0ff61703e7f7",
        "name": "Log write file",
        "filename": "~/.node-red/context/Log.txt",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1190,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "6c8b8feb26f37a0c",
        "type": "function",
        "z": "812b0ff61703e7f7",
        "name": "JalausielWindAlarmToFileCSV",
        "func": "// alarm\nvar x = global.get('BV_WindAlarm2');\nvar xOld = global.get('BV_WindAlarm2Old');\n\nif (!x) {\n  msg.payload = global.get('date') + \" \" + global.get('time') + \",\" + \"Markise,\" + \"Windschutz,\" + \"Normal\"\n};\nif (x) {\n  msg.payload = global.get('date') + \" \" + global.get('time') + \",\" + \"Markise,\" +\"Windschutz,\" +  \"Alarm\"   \n};\n\nif (xOld !== x) {\n  global.set('BV_WindAlarm2Old', x);\n  return msg;\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 760,
        "wires": [
            [
                "8e3827144c7d7abc"
            ]
        ]
    },
    {
        "id": "9ebd1f7e369d9622",
        "type": "file",
        "z": "812b0ff61703e7f7",
        "name": "Log write file",
        "filename": "~/.node-red/context/Log.txt",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1170,
        "y": 1500,
        "wires": [
            []
        ]
    },
    {
        "id": "09ad9e97447c1fd5",
        "type": "function",
        "z": "812b0ff61703e7f7",
        "name": "JalausielRainAlarmToFileCSV",
        "func": "// alarm\nvar x = global.get('BV_RainAlarm2');\nvar xOld = global.get('BV_RainAlarm2Old');\n\nif (!x) {\n  msg.payload = global.get('date') + \" \" + global.get('time') + \",\" + \"Markise,\" + \"Niederschlagschutz,\" + \"Normal\"\n};\nif (x) {\n  msg.payload = global.get('date') + \" \" + global.get('time') + \",\" + \"Markise,\" + \"Niederschlagschutz,\" + \"Alarm\"\n};\n\nif (xOld !== x) {\n  global.set('BV_RainAlarm2Old', x);\n  return msg;\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 1500,
        "wires": [
            [
                "9ebd1f7e369d9622"
            ]
        ]
    },
    {
        "id": "98d304b591342eed",
        "type": "inject",
        "z": "812b0ff61703e7f7",
        "name": "once",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 120,
        "wires": [
            [
                "8fa4ddcfb20e6ae3"
            ]
        ]
    },
    {
        "id": "8fa4ddcfb20e6ae3",
        "type": "function",
        "z": "812b0ff61703e7f7",
        "name": "init flow Contex",
        "func": "global.set('BV_RainAlarmOld1',false);\nglobal.set('BV_WindAlarmOld1',false);\n\nflow.set('StampDown', Date.now());\nflow.set('StampUp', Date.now());\nflow.set('DurationDown', Date.now());\nflow.set('DurationUp', Date.now());\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "03dc47beb2b0a080",
        "type": "function",
        "z": "812b0ff61703e7f7",
        "name": "50002CHANNEL2UP and 50003CHANNEL2DOWN",
        "func": "// 50002CHANNEL1UP       y101->Up\n// 50003CHANNEL1DOWN     y102 -> Down\n\nvar stampUp = flow.get('StampUp');\nvar stampDown = flow.get('StampDown');\nvar durationDown = Date.now() - stampDown;\nvar durationUp = Date.now() - stampUp;\nflow.set('DurationDown', durationDown);           //Flow variable for debuging\nflow.set('DurationUp', durationUp);               //Flow variable for debuging\nvar time1 = 10000; // ms\nvar time2 = 70000; // ms\nvar time3 = 7200000; // ms 2 hours\n\n// alarm expression\nvar alarm1 = global.get('BV_RainAlarm2');\nvar alarm2 = global.get('BV_WindAlarm2');\n\n// schedule  expression\nvar x = flow.get('BV_Schedule');\n\n// Down function\nif (x && !alarm1 && !alarm2) {\n     flow.set('StampUp', Date.now()); // Timestamp for up !!!!\n     // wait 10s\n     stampDown = flow.get('StampDown');\n     \n     if (durationDown < time1) {\n          global.set('50002CHANNEL2UP', false); \n          global.set('50003CHANNEL2DOWN', false);\n     }\n     if (durationDown < time2 && durationDown > time1) {\n          global.set('50002CHANNEL2UP', false);\n          global.set('50003CHANNEL2DOWN', true); \n     }\n     if (durationDown < time3 && durationDown > time2) {\n          global.set('50002CHANNEL2UP', false); \n          global.set('50003CHANNEL2DOWN', false);\n     } \n     flow.set('StampUp', Date.now());   // Timestamp for up  \n     return msg;  \n}\n//Up function\nelse {\n     flow.set('StampDown', Date.now()); // Timestamp for down !!!!\n      //wait 10s\n     stampUp = Number(flow.get('StampUp'));\n     if (durationUp < time1) {\n          global.set('50002CHANNEL2UP', false);\n          global.set('50003CHANNEL2DOWN', false);\n     }\n     if (durationUp < time2 && durationUp > time1) {\n          global.set('50002CHANNEL2UP', true);\n          global.set('50003CHANNEL2DOWN', false);\n     }\n     // wait 60s Motorlaufzeit\n     if (durationUp < time3 && durationUp > time2) {\n          global.set('50002CHANNEL2UP', false);\n          global.set('50003CHANNEL2DOWN', false);\n     }\n     // wait 2h repeat alarm\n     if (durationUp > time3 && (alarm1 || alarm2)) {\n         flow.set('StampUp', Date.now())\n     }\n     flow.set('StampDown', Date.now()); // Timestamp for down\n     return msg;\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 3160,
        "wires": [
            []
        ]
    },
    {
        "id": "25b1b894a48e3bf2",
        "type": "ui_dropdown",
        "z": "812b0ff61703e7f7",
        "name": "",
        "label": "Windschutz",
        "tooltip": "Windschutz",
        "place": "Select option",
        "group": "922b78cb649e46cb",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "nicht aktiv",
                "value": false,
                "type": "bool"
            },
            {
                "label": "aktiv",
                "value": true,
                "type": "bool"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 870,
        "y": 180,
        "wires": [
            [
                "bab64d9eba152799"
            ]
        ]
    },
    {
        "id": "741369cfd20e27fd",
        "type": "ui_slider",
        "z": "812b0ff61703e7f7",
        "name": "AI_speedHighLimit",
        "label": "Grenzwert in km/h",
        "tooltip": "Grenzwert Windgeschwindigkeit",
        "group": "922b78cb649e46cb",
        "order": 3,
        "width": "",
        "height": "",
        "passthru": true,
        "outs": "end",
        "topic": "",
        "topicType": "str",
        "min": 0,
        "max": "70",
        "step": "5",
        "className": "",
        "x": 890,
        "y": 420,
        "wires": [
            [
                "54816ad47bc195fb"
            ]
        ]
    },
    {
        "id": "5c62157421290e0c",
        "type": "ui_text",
        "z": "812b0ff61703e7f7",
        "group": "922b78cb649e46cb",
        "order": 6,
        "width": "",
        "height": "",
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 930,
        "y": 680,
        "wires": []
    },
    {
        "id": "24eced0b58833e21",
        "type": "ui_gauge",
        "z": "812b0ff61703e7f7",
        "name": "Windgeschwindigkeit",
        "group": "922b78cb649e46cb",
        "order": 2,
        "width": "",
        "height": "",
        "gtype": "gage",
        "title": "Maximale Windböe innerhalb der letzten Stunde",
        "label": "",
        "format": "{{value}}km/h",
        "min": "0.0",
        "max": "70",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1040,
        "y": 580,
        "wires": []
    },
    {
        "id": "5ae35509b7974ec3",
        "type": "ui_slider",
        "z": "812b0ff61703e7f7",
        "name": "AV_ChanceOfRainLimit",
        "label": "Grenzwert in %",
        "tooltip": "Grenzwert Regenwahrscheinlichkeit",
        "group": "7931605bd60b47a1",
        "order": 4,
        "width": "",
        "height": "",
        "passthru": true,
        "outs": "end",
        "topic": "",
        "topicType": "str",
        "min": 0,
        "max": "100",
        "step": "5",
        "className": "",
        "x": 790,
        "y": 1020,
        "wires": [
            [
                "342514b78b14b3e8"
            ]
        ]
    },
    {
        "id": "e2ce4dc2ccdacda0",
        "type": "ui_dropdown",
        "z": "812b0ff61703e7f7",
        "name": "",
        "label": "Niederschlagschutz",
        "tooltip": "Niederschlagschutz",
        "place": "Select option",
        "group": "7931605bd60b47a1",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "nicht aktiv",
                "value": false,
                "type": "bool"
            },
            {
                "label": "aktiv",
                "value": true,
                "type": "bool"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 770,
        "y": 940,
        "wires": [
            [
                "367cb92b2d79bd32"
            ]
        ]
    },
    {
        "id": "d401650bb14eb149",
        "type": "ui_gauge",
        "z": "812b0ff61703e7f7",
        "name": "AI_ChangeOfRain",
        "group": "7931605bd60b47a1",
        "order": 3,
        "width": "",
        "height": "",
        "gtype": "gage",
        "title": "Regenwahrscheinlichkeit",
        "label": "",
        "format": "{{value}} %",
        "min": "0.0",
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 950,
        "y": 1360,
        "wires": []
    },
    {
        "id": "86b4fc456df659cc",
        "type": "ui_text",
        "z": "812b0ff61703e7f7",
        "group": "7931605bd60b47a1",
        "order": 7,
        "width": "",
        "height": "",
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 950,
        "y": 1440,
        "wires": []
    },
    {
        "id": "26dc52f825f655f3",
        "type": "ui_text",
        "z": "812b0ff61703e7f7",
        "group": "7931605bd60b47a1",
        "order": 2,
        "width": "",
        "height": "",
        "name": "Regen",
        "label": "Regen",
        "format": "{{msg.payload}}",
        "layout": "",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 930,
        "y": 1300,
        "wires": []
    },
    {
        "id": "20116d7eecc7092f",
        "type": "ui_text",
        "z": "812b0ff61703e7f7",
        "group": "54566316ec606040",
        "order": "6",
        "width": "",
        "height": "",
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 850,
        "y": 2080,
        "wires": []
    },
    {
        "id": "26aabd60a0f582ec",
        "type": "ui_dropdown",
        "z": "812b0ff61703e7f7",
        "name": "",
        "label": "Zeitprogramm",
        "tooltip": "Zeitprogramm",
        "place": "Select option",
        "group": "54566316ec606040",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "nicht aktiv",
                "value": false,
                "type": "bool"
            },
            {
                "label": "aktiv",
                "value": true,
                "type": "bool"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 640,
        "y": 1700,
        "wires": [
            [
                "685dfa3db9df0719"
            ]
        ]
    },
    {
        "id": "67dde0a4d5cb7ef9",
        "type": "comment",
        "z": "812b0ff61703e7f7",
        "name": "google.maps 48.6429777,9.004596",
        "info": "https://www.google.de/maps/place/Annaweg+9,+71088+Holzgerlingen/@48.6429777,9.004596,19",
        "x": 460,
        "y": 1940,
        "wires": []
    },
    {
        "id": "e2f5c8656158957d",
        "type": "comment",
        "z": "812b0ff61703e7f7",
        "name": "### This scenario is permanent and requires a file to read an write to ###",
        "info": "",
        "x": 480,
        "y": 1820,
        "wires": []
    },
    {
        "id": "f3958e09abed889b",
        "type": "inject",
        "z": "812b0ff61703e7f7",
        "name": "FireAfterReboot",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 1880,
        "wires": [
            [
                "e55f8b81eed546ae"
            ]
        ]
    },
    {
        "id": "b7fb27923978e574",
        "type": "ui_time_scheduler",
        "z": "812b0ff61703e7f7",
        "group": "54566316ec606040",
        "name": "Zeitprogramm",
        "startDay": "1",
        "refresh": 60,
        "devices": [
            "Markise"
        ],
        "singleOff": false,
        "onlySendChange": false,
        "customPayload": false,
        "eventMode": false,
        "eventOptions": [],
        "sendTopic": false,
        "lat": "48.6429777",
        "lon": "9.00459619",
        "customContextStore": "",
        "outputs": 2,
        "order": 1,
        "width": 0,
        "height": 0,
        "x": 680,
        "y": 1880,
        "wires": [
            [
                "dd07788ddb279555"
            ],
            [
                "2f61f626b4ee63db"
            ]
        ]
    },
    {
        "id": "2f61f626b4ee63db",
        "type": "function",
        "z": "812b0ff61703e7f7",
        "name": "BO_ScheduleOutDown",
        "func": "\nflow.set('BO_ScheduleOutDown', msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 1960,
        "wires": [
            []
        ]
    },
    {
        "id": "e55f8b81eed546ae",
        "type": "function",
        "z": "812b0ff61703e7f7",
        "name": "flow.get Schedule text",
        "func": "msg.payload = flow.get('Schedule');\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 1880,
        "wires": [
            [
                "b7fb27923978e574"
            ]
        ]
    },
    {
        "id": "dd07788ddb279555",
        "type": "function",
        "z": "812b0ff61703e7f7",
        "name": "flow.set Schedule text",
        "func": "flow.set('Schedule',msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 1860,
        "wires": [
            []
        ]
    },
    {
        "id": "d6046c7587566508",
        "type": "function",
        "z": "812b0ff61703e7f7",
        "name": "Calculate BV_WindAlarm",
        "func": "var alarm = false;\nvar active = flow.get('BV_WindMeasureActive');\nif (global.get('AV_WindMax') <= flow.get('AI_speedHighLimit')) {\n    alarm = false;\n}\nelse {\n    alarm = true;\n}\n\nif (alarm && active) {\n    msg.payload = '<font size = 16><font color = red>' + 'Alarm';\n    global.set('BV_WindAlarm2', true);\n}\nif (!alarm && active) {\n    msg.payload = '<font size = 16><font color = green>' + 'Kein Alarm';\n    global.set('BV_WindAlarm2', false);\n}\nif (!active) {\n    msg.payload = 'Windschutz Funktion nicht aktiv!';\n    global.set('BV_WindAlarm2', false);\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 680,
        "wires": [
            [
                "5c62157421290e0c",
                "6c8b8feb26f37a0c"
            ]
        ]
    },
    {
        "id": "53b89dcaf4418874",
        "type": "ui_button",
        "z": "b58df928500ccc77",
        "name": "",
        "group": "ef88dac95fd5e728",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Ereignisprotokoll archivieren",
        "tooltip": "Ereignisprotokoll archivieren",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 225,
        "y": 1080,
        "wires": [
            [
                "04c938348c460216"
            ]
        ],
        "l": false
    },
    {
        "id": "d0dcfd20440c467e",
        "type": "file",
        "z": "b58df928500ccc77",
        "name": "Delete Log file",
        "filename": "~/.node-red/context/Log.txt",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 498.00001525878906,
        "y": 968.0000219345093,
        "wires": [
            [
                "9604600676a5f3c1"
            ]
        ]
    },
    {
        "id": "49df11733ad5b05c",
        "type": "function",
        "z": "b58df928500ccc77",
        "name": "Collect Refresh",
        "func": "msg.payload = \"text\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 680,
        "wires": [
            [
                "aaf8419c95de41dd"
            ]
        ]
    },
    {
        "id": "aaf8419c95de41dd",
        "type": "file in",
        "z": "b58df928500ccc77",
        "name": "",
        "filename": "~/.node-red/context/Log.txt",
        "filenameType": "str",
        "format": "lines",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": true,
        "x": 820,
        "y": 680,
        "wires": [
            [
                "38728a9776439c9b"
            ]
        ]
    },
    {
        "id": "38728a9776439c9b",
        "type": "csv",
        "z": "b58df928500ccc77",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": false,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 1070,
        "y": 680,
        "wires": [
            [
                "0c7a46da5e10110d"
            ]
        ]
    },
    {
        "id": "41b9d24da0bdab2d",
        "type": "function",
        "z": "b58df928500ccc77",
        "name": "Delete Log file",
        "func": "msg.payload = global.get('date') + \" \" + global.get('time') + \",\" + \"Allgemein,\" + \"Datei Log.txt,\" + \"Archiviert\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 938.0000152587891,
        "y": 968.0000219345093,
        "wires": [
            [
                "ef6dcfccf011f1eb"
            ]
        ]
    },
    {
        "id": "0c7a46da5e10110d",
        "type": "ui_table",
        "z": "b58df928500ccc77",
        "group": "161e9e42bd0768fa",
        "name": "",
        "order": 0,
        "width": "12",
        "height": "20",
        "columns": [],
        "outputs": 1,
        "cts": true,
        "x": 1290,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "3de568dd7afef0f0",
        "type": "function",
        "z": "b58df928500ccc77",
        "name": "Header",
        "func": "msg.payload = \"Datum,Anlage,Gerät,Zustand\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 980,
        "wires": [
            [
                "d0dcfd20440c467e"
            ]
        ]
    },
    {
        "id": "ef6dcfccf011f1eb",
        "type": "file",
        "z": "b58df928500ccc77",
        "name": "Log write file",
        "filename": "~/.node-red/context/Log.txt",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1128.000015258789,
        "y": 968.0000219345093,
        "wires": [
            [
                "49df11733ad5b05c"
            ]
        ]
    },
    {
        "id": "9604600676a5f3c1",
        "type": "trigger",
        "z": "b58df928500ccc77",
        "name": "2 Sekunden",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "pay",
        "duration": "2",
        "extend": false,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 728.0000152587891,
        "y": 968.0000219345093,
        "wires": [
            [
                "41b9d24da0bdab2d"
            ]
        ]
    },
    {
        "id": "eb549214cd0b0187",
        "type": "catch",
        "z": "b58df928500ccc77",
        "name": "read file catches",
        "scope": [
            "d0dcfd20440c467e",
            "aaf8419c95de41dd",
            "ef6dcfccf011f1eb"
        ],
        "uncaught": false,
        "x": 140,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "5f6b5c0a93c88cb9",
        "type": "inject",
        "z": "b58df928500ccc77",
        "name": "Every day 00:00",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "00 00 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "\"test.txt\"",
        "payloadType": "str",
        "x": 190,
        "y": 1160,
        "wires": [
            [
                "04c938348c460216"
            ]
        ]
    },
    {
        "id": "04c938348c460216",
        "type": "function",
        "z": "b58df928500ccc77",
        "name": "Archiv Log file",
        "func": "var x = \"text\";\nvar xOld = \"text\";\nx  = global.get('date').substring(0, 4) + global.get('date').substring(5, 7) + global.get('timeShort').substring(0, 2) + global.get('timeShort').substring(3, 5);\nflow.set('YYYY', global.get('date').substring(0, 4));\nflow.set('YYYYMMDDHHMM', x);\nxOld = flow.get('YYYYMMDDHHMMOld');\n\nif (!x.startsWith('xOld'.substring(0, 10))){   \n    flow.set('YYYYMMDDHHMMOld',x);\n    msg.payload = x + 'Log.txt';\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 1080,
        "wires": [
            [
                "6f98b193cc75caa7"
            ]
        ]
    },
    {
        "id": "776fa743fbf8ae2f",
        "type": "inject",
        "z": "b58df928500ccc77",
        "name": "once",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 100,
        "wires": [
            [
                "d1584ebda1379968"
            ]
        ]
    },
    {
        "id": "d1584ebda1379968",
        "type": "function",
        "z": "b58df928500ccc77",
        "name": "init flow Contex",
        "func": "flow.set('YYYYMMDDHHMMOld', global.get('date').substring(0, 4) + global.get('date').substring(5, 7) + global.get('timeShort').substring(0, 2) + global.get('timeShort').substring(3, 5)) ;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "42b3e08689cf1dad",
        "type": "fs-ops-copy",
        "z": "b58df928500ccc77",
        "name": "",
        "sourcePath": "~/.node-red/context/",
        "sourcePathType": "str",
        "sourceFilename": "Log.txt",
        "sourceFilenameType": "str",
        "destPath": "directory",
        "destPathType": "flow",
        "destFilename": "payload",
        "destFilenameType": "msg",
        "link": false,
        "overwrite": false,
        "x": 800,
        "y": 1080,
        "wires": [
            [
                "3de568dd7afef0f0"
            ]
        ]
    },
    {
        "id": "6f98b193cc75caa7",
        "type": "fs-ops-mkdir",
        "z": "b58df928500ccc77",
        "name": "",
        "path": "~/.node-red/context/",
        "pathType": "str",
        "dirname": "YYYY",
        "dirnameType": "flow",
        "recursive": false,
        "mode": "777",
        "fullpath": "directory",
        "fullpathType": "flow",
        "x": 620,
        "y": 1080,
        "wires": [
            [
                "42b3e08689cf1dad"
            ]
        ]
    },
    {
        "id": "c6bd1b6b79cf03f9",
        "type": "inject",
        "z": "b58df928500ccc77",
        "name": "every 10s",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "10",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 680,
        "wires": [
            [
                "49df11733ad5b05c"
            ]
        ]
    },
    {
        "id": "c9dbd9493283992d",
        "type": "buffer-parser",
        "z": "ee3039d35ce6bda2",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "floatbe",
                "name": "Voltage",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "value",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 590,
        "y": 420,
        "wires": [
            [
                "e7312e4e9f9c8b53"
            ]
        ]
    },
    {
        "id": "3516cdaf468b59dc",
        "type": "buffer-parser",
        "z": "ee3039d35ce6bda2",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "floatbe",
                "name": "Current",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "value",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 610,
        "y": 520,
        "wires": [
            [
                "cf660e6730e0b80d"
            ]
        ]
    },
    {
        "id": "c013d5b42c6449b0",
        "type": "buffer-parser",
        "z": "ee3039d35ce6bda2",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "floatbe",
                "name": "ActivePower",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "value",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 610,
        "y": 620,
        "wires": [
            [
                "37c2a59a67c245c0"
            ]
        ]
    },
    {
        "id": "e7312e4e9f9c8b53",
        "type": "function",
        "z": "ee3039d35ce6bda2",
        "name": "Voltage",
        "func": "flow.set('Voltage', msg.payload[0]);\nmsg.payload = flow.get('FontUebersicht') + Math.round(flow.get('Voltage') * 100) / 100  + ' V';\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 420,
        "wires": [
            [
                "982c5be73d6b295d"
            ]
        ]
    },
    {
        "id": "cf660e6730e0b80d",
        "type": "function",
        "z": "ee3039d35ce6bda2",
        "name": "Strom",
        "func": "flow.set('Current', msg.payload[0]);\nmsg.payload = flow.get('FontUebersicht') + Math.round(flow.get('Current') * 100) / 100 + ' A';\nreturn msg;\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 520,
        "wires": [
            [
                "b0e55755066ff5f9"
            ]
        ]
    },
    {
        "id": "37c2a59a67c245c0",
        "type": "function",
        "z": "ee3039d35ce6bda2",
        "name": "Active power",
        "func": "flow.set('ActivePower', msg.payload[0]);\nmsg.payload = flow.get('FontUebersicht') + Math.round(flow.get('ActivePower') * 100) / 100 + ' W';\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 620,
        "wires": [
            [
                "9a6c50ddcdd1d130"
            ]
        ]
    },
    {
        "id": "9e32405454ea052c",
        "type": "modbus-read",
        "z": "ee3039d35ce6bda2",
        "name": "Voltage 30001",
        "topic": "Voltage",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "InputRegister",
        "adr": "0",
        "quantity": "2",
        "rate": "30",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "9ce68eba8f076d45",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 370,
        "y": 420,
        "wires": [
            [
                "c9dbd9493283992d",
                "194d828589eb9b84"
            ],
            []
        ]
    },
    {
        "id": "3ce8a1975a1beb52",
        "type": "modbus-read",
        "z": "ee3039d35ce6bda2",
        "name": "Current 30007",
        "topic": "Current",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "InputRegister",
        "adr": "6",
        "quantity": "2",
        "rate": "35",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "9ce68eba8f076d45",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 370,
        "y": 520,
        "wires": [
            [
                "3516cdaf468b59dc",
                "194d828589eb9b84"
            ],
            []
        ]
    },
    {
        "id": "b9b64e53efe80ad3",
        "type": "modbus-read",
        "z": "ee3039d35ce6bda2",
        "name": "Active power 30013",
        "topic": "ActivePower ",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "InputRegister",
        "adr": "12",
        "quantity": "2",
        "rate": "40",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "9ce68eba8f076d45",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 390,
        "y": 620,
        "wires": [
            [
                "c013d5b42c6449b0",
                "194d828589eb9b84"
            ],
            []
        ]
    },
    {
        "id": "ae8ce53335a97a78",
        "type": "buffer-parser",
        "z": "ee3039d35ce6bda2",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "floatbe",
                "name": "ImportActiveEnergy ",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "value",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 610,
        "y": 700,
        "wires": [
            [
                "618440bbdb90f1b0"
            ]
        ]
    },
    {
        "id": "618440bbdb90f1b0",
        "type": "function",
        "z": "ee3039d35ce6bda2",
        "name": "Import active energy ",
        "func": "flow.set('ImportActiveEnergy', msg.payload[0]);\nmsg.payload = flow.get('FontUebersicht') + Math.round(flow.get('ImportActiveEnergy') * 100) / 100 + ' kWh';\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 700,
        "wires": [
            [
                "be07c213ebb324b6"
            ]
        ]
    },
    {
        "id": "57c22ee0a5341cee",
        "type": "modbus-read",
        "z": "ee3039d35ce6bda2",
        "name": "Import active energy 30073",
        "topic": "ImportActiveEnergy ",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "InputRegister",
        "adr": "72",
        "quantity": "2",
        "rate": "50",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "9ce68eba8f076d45",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 370,
        "y": 700,
        "wires": [
            [
                "ae8ce53335a97a78",
                "194d828589eb9b84"
            ],
            []
        ]
    },
    {
        "id": "982c5be73d6b295d",
        "type": "ui_text",
        "z": "ee3039d35ce6bda2",
        "group": "55f3b6cfd457f92e",
        "order": "8",
        "width": "",
        "height": "",
        "name": "Spannung",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1070,
        "y": 420,
        "wires": []
    },
    {
        "id": "a183418279bd113b",
        "type": "function",
        "z": "ee3039d35ce6bda2",
        "name": "FontUebersicht",
        "func": "let x = '<font size = 16><font color = blue>';\nflow.set('FontUebersicht', x);\nmsg.payload = x;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "00b542b454b9bc4c",
        "type": "inject",
        "z": "ee3039d35ce6bda2",
        "name": "all 60 minutes",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "0 0-2 * * *",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 200,
        "y": 60,
        "wires": [
            [
                "a183418279bd113b"
            ]
        ]
    },
    {
        "id": "b0e55755066ff5f9",
        "type": "ui_text",
        "z": "ee3039d35ce6bda2",
        "group": "7d8e1049cb9a10f3",
        "order": "8",
        "width": "",
        "height": "",
        "name": "Strom",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1050,
        "y": 520,
        "wires": []
    },
    {
        "id": "9a6c50ddcdd1d130",
        "type": "ui_text",
        "z": "ee3039d35ce6bda2",
        "group": "2d3508085627b53b",
        "order": "8",
        "width": "",
        "height": "",
        "name": "Leistung",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1060,
        "y": 620,
        "wires": []
    },
    {
        "id": "be07c213ebb324b6",
        "type": "ui_text",
        "z": "ee3039d35ce6bda2",
        "group": "769eb6f4b51ce928",
        "order": "8",
        "width": "",
        "height": "",
        "name": "Arbeit",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1050,
        "y": 700,
        "wires": []
    },
    {
        "id": "7633658c7a367e81",
        "type": "buffer-parser",
        "z": "ee3039d35ce6bda2",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "floatbe",
                "name": "Frequency ",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "value",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 610,
        "y": 780,
        "wires": [
            [
                "8f36f561bff6a730"
            ]
        ]
    },
    {
        "id": "8f36f561bff6a730",
        "type": "function",
        "z": "ee3039d35ce6bda2",
        "name": "Frequency",
        "func": "flow.set('Frequency', msg.payload[0]);\nmsg.payload = flow.get('FontUebersicht') + Math.round(flow.get('Frequency') * 100) / 100 + ' Hz';\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 780,
        "wires": [
            [
                "eec6b876561ebbe3"
            ]
        ]
    },
    {
        "id": "70eb620314b36ce7",
        "type": "modbus-read",
        "z": "ee3039d35ce6bda2",
        "name": "Frequency 30071",
        "topic": "Frequency",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "1",
        "dataType": "InputRegister",
        "adr": "70",
        "quantity": "2",
        "rate": "55",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "9ce68eba8f076d45",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 340,
        "y": 780,
        "wires": [
            [
                "7633658c7a367e81",
                "194d828589eb9b84"
            ],
            []
        ]
    },
    {
        "id": "eec6b876561ebbe3",
        "type": "ui_text",
        "z": "ee3039d35ce6bda2",
        "group": "3d298cd0c77762c0",
        "order": "8",
        "width": "",
        "height": "",
        "name": "Frequenz",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1060,
        "y": 780,
        "wires": []
    },
    {
        "id": "cb865eb830c1358d",
        "type": "ui_switch",
        "z": "ee3039d35ce6bda2",
        "name": "",
        "label": "RX Empfange Daten",
        "tooltip": "RX Empfange Daten",
        "group": "cf2ecd3598188257",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "wb_sunny",
        "oncolor": "SlateBlue",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "wb_sunny",
        "offcolor": "Gainsboro",
        "animate": false,
        "className": "",
        "x": 720,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "b749fc4f40745f33",
        "type": "ui_switch",
        "z": "ee3039d35ce6bda2",
        "name": "",
        "label": "TX Sende Daten",
        "tooltip": "TX Sende Daten",
        "group": "cf2ecd3598188257",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "wb_sunny",
        "oncolor": "SlateBlue",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "wb_sunny",
        "offcolor": "Gainsboro",
        "animate": false,
        "className": "",
        "x": 710,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "194d828589eb9b84",
        "type": "trigger",
        "z": "ee3039d35ce6bda2",
        "name": "",
        "op1": "true",
        "op2": "false",
        "op1type": "bool",
        "op2type": "bool",
        "duration": "1",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 520,
        "y": 280,
        "wires": [
            [
                "cb865eb830c1358d"
            ]
        ]
    },
    {
        "id": "d5d7f648da0d0b5b",
        "type": "comment",
        "z": "62256efe3f7916e8",
        "name": "Digital Input",
        "info": "",
        "x": 290,
        "y": 180,
        "wires": []
    },
    {
        "id": "d81b1c08d0ba18c0",
        "type": "ui_text",
        "z": "62256efe3f7916e8",
        "group": "1a75bd5ce7cf87b7",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "00DI_RC_Channel1Up",
        "label": "00DI_RC_Channel1Up",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 980,
        "y": 340,
        "wires": []
    },
    {
        "id": "d45d18ea4aa4d312",
        "type": "ui_text",
        "z": "62256efe3f7916e8",
        "group": "1a75bd5ce7cf87b7",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "01DI_RC_Channel1Down",
        "label": "01DI_RC_Channel1Down",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 970,
        "y": 460,
        "wires": []
    },
    {
        "id": "be950e418f441973",
        "type": "ui_text",
        "z": "62256efe3f7916e8",
        "group": "1a75bd5ce7cf87b7",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "02DI_RC_Channel2Up",
        "label": "02DI_RC_Channel2Up",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 960,
        "y": 600,
        "wires": []
    },
    {
        "id": "7234b67b6424c34f",
        "type": "ui_text",
        "z": "62256efe3f7916e8",
        "group": "1a75bd5ce7cf87b7",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "03DI_RC_Channel2Down",
        "label": "03DI_RC_Channel2Down",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 970,
        "y": 760,
        "wires": []
    },
    {
        "id": "79d97c704ef7974c",
        "type": "modbus-getter",
        "z": "62256efe3f7916e8",
        "name": "FC 2: Read Input Status",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "unitid": "10",
        "dataType": "Input",
        "adr": "0",
        "quantity": "10",
        "server": "73facf39de5e6333",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 350,
        "y": 340,
        "wires": [
            [
                "6028cf4d6c76717c",
                "c9524b55a3a3e697",
                "a2c6039a5df2bd3f",
                "bb259ca671c75c63",
                "910824bf273e74a6",
                "308a88e9e8cbada2",
                "e99efa674d9531ae"
            ],
            []
        ]
    },
    {
        "id": "e37e54e8f7e1a16b",
        "type": "inject",
        "z": "62256efe3f7916e8",
        "name": "Every2second",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 340,
        "wires": [
            [
                "79d97c704ef7974c"
            ]
        ]
    },
    {
        "id": "6028cf4d6c76717c",
        "type": "function",
        "z": "62256efe3f7916e8",
        "name": "00DI_RC_Channel1Up",
        "func": "// https://github.com/CMB27/ModbusRTUSlave/blob/main/examples/ModbusRTUSlaveExample/ModbusRTUSlaveExample.ino \nglobal.set('00DI_RC_Channel1Up', msg.payload[0]);\nmsg.payload = flow.get('FontUebersicht') + global.get('00DI_RC_Channel1Up');\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 340,
        "wires": [
            [
                "d81b1c08d0ba18c0",
                "02535e7e5a8a5459"
            ]
        ]
    },
    {
        "id": "c9524b55a3a3e697",
        "type": "function",
        "z": "62256efe3f7916e8",
        "name": "01DI_RC_Channel1Down",
        "func": "global.set('01DI_RC_Channel1Down', msg.payload[1]);\nmsg.payload = flow.get('FontUebersicht') + global.get('01DI_RC_Channel1Down');\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 460,
        "wires": [
            [
                "d45d18ea4aa4d312",
                "98c757f6bbebd99a"
            ]
        ]
    },
    {
        "id": "a2c6039a5df2bd3f",
        "type": "function",
        "z": "62256efe3f7916e8",
        "name": "02DI_RC_Channel2Up",
        "func": "global.set('02DI_RC_Channel2Up', msg.payload[2]);\nmsg.payload = flow.get('FontUebersicht') + global.get('02DI_RC_Channel2Up');\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 600,
        "wires": [
            [
                "be950e418f441973",
                "b9c0a4802e7a8e90"
            ]
        ]
    },
    {
        "id": "bb259ca671c75c63",
        "type": "function",
        "z": "62256efe3f7916e8",
        "name": "03DI_RC_Channel2Down",
        "func": "global.set('03DI_RC_Channel2Down', msg.payload[3]);\nmsg.payload = flow.get('FontUebersicht') + global.get('03DI_RC_Channel2Down');\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 760,
        "wires": [
            [
                "7234b67b6424c34f",
                "9b77f3266a09e196"
            ]
        ]
    },
    {
        "id": "82be648be914d7ff",
        "type": "ui_text",
        "z": "62256efe3f7916e8",
        "group": "1a75bd5ce7cf87b7",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": " 06IN0_Wind",
        "label": " 06IN0_Wind",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 930,
        "y": 860,
        "wires": []
    },
    {
        "id": "910824bf273e74a6",
        "type": "function",
        "z": "62256efe3f7916e8",
        "name": "06IN0_Wind",
        "func": "global.set('06IN0_Wind', msg.payload[6]);\nmsg.payload = flow.get('FontUebersicht') + global.get('06IN0_Wind');\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 860,
        "wires": [
            [
                "82be648be914d7ff"
            ]
        ]
    },
    {
        "id": "2e6a934406b21f89",
        "type": "ui_text",
        "z": "62256efe3f7916e8",
        "group": "1a75bd5ce7cf87b7",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": " 07IN1_Rain",
        "label": " 07IN1_Rain",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 930,
        "y": 920,
        "wires": []
    },
    {
        "id": "308a88e9e8cbada2",
        "type": "function",
        "z": "62256efe3f7916e8",
        "name": "07IN1_Rain",
        "func": "global.set('07IN1_Rain', msg.payload[7]);\nmsg.payload = flow.get('FontUebersicht') + global.get('07IN1_Rain');\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 920,
        "wires": [
            [
                "2e6a934406b21f89",
                "efa2700fdaeb0bc8"
            ]
        ]
    },
    {
        "id": "274b49b0ef6c59e8",
        "type": "function",
        "z": "62256efe3f7916e8",
        "name": "FontUebersicht",
        "func": "let x = '<font color = blue>';\nflow.set('FontUebersicht', x);\nmsg.payload = x;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "06390088d0c84ed3",
        "type": "inject",
        "z": "62256efe3f7916e8",
        "name": "all 60 minutes",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "0 0-2 * * *",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 120,
        "y": 80,
        "wires": [
            [
                "274b49b0ef6c59e8"
            ]
        ]
    },
    {
        "id": "d49e3307bd4e796a",
        "type": "file",
        "z": "62256efe3f7916e8",
        "name": "Log write file",
        "filename": "~/.node-red/context/Log.txt",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1210,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "02535e7e5a8a5459",
        "type": "function",
        "z": "62256efe3f7916e8",
        "name": "Log write file",
        "func": "var x = global.get('00DI_RC_Channel1Up');\nvar xOld = global.get('00DI_RC_Channel1UpOld');\n\nif (x !== xOld && x) {\n  msg.payload = global.get('date') + \" \" + global.get('time') + \",\" + \"Jalausie,\" + \"Fernbedienung Hoch,\" + \"Ein\";\n  global.set('00DI_RC_Channel1UpOld', true);\n  return msg;\n};\nif (x !== xOld && !x) {\n  msg.payload = global.get('date') + \" \" + global.get('time') + \",\" + \"Jalausie,\" + \"Fernbedienung Hoch,\" + \"Aus\";\n  global.set('00DI_RC_Channel1UpOld', false);\n  return msg;\n};\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 380,
        "wires": [
            [
                "d49e3307bd4e796a"
            ]
        ]
    },
    {
        "id": "95091b3124437372",
        "type": "file",
        "z": "62256efe3f7916e8",
        "name": "Log write file",
        "filename": "~/.node-red/context/Log.txt",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1210,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "98c757f6bbebd99a",
        "type": "function",
        "z": "62256efe3f7916e8",
        "name": "Log write file",
        "func": "var x = global.get('01DI_RC_Channel1Down');\nvar xOld = global.get('01DI_RC_Channel1DownOld');\n\nif (x !== xOld && x) {\n  msg.payload = global.get('date') + \" \" + global.get('time') + \",\" + \"Jalausie,\" + \"Fernbedienung Runter,\" + \"Ein\";\n  global.set('01DI_RC_Channel1DownOld', true);\n  return msg;\n};\nif (x !== xOld && !x) {\n  msg.payload = global.get('date') + \" \" + global.get('time') + \",\" + \"Jalausie,\" + \"Fernbedienung Runter,\" + \"Aus\";\n  global.set('01DI_RC_Channel1DownOld', false);\n  return msg;\n};\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 500,
        "wires": [
            [
                "95091b3124437372"
            ]
        ]
    },
    {
        "id": "9dfb37debb332ef1",
        "type": "file",
        "z": "62256efe3f7916e8",
        "name": "Log write file",
        "filename": "~/.node-red/context/Log.txt",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1210,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "b9c0a4802e7a8e90",
        "type": "function",
        "z": "62256efe3f7916e8",
        "name": "Log write file",
        "func": "var x = global.get('02DI_RC_Channel2Up');\nvar xOld = global.get('02DI_RC_Channel2UpOld');\n\nif (x !== xOld && x) {\n  msg.payload = global.get('date') + \" \" + global.get('time') + \",\" + \"Markise,\" + \"Fernbedienung Hoch,\" + \"Ein\";\n  global.set('02DI_RC_Channel2UpOld', true);\n  return msg;\n};\nif (x !== xOld && !x) {\n  msg.payload = global.get('date') + \" \" + global.get('time') + \",\" + \"Markise,\" + \"Fernbedienung Hoch,\" + \"Aus\";\n  global.set('02DI_RC_Channel2UpOld', false);\n  return msg;\n};\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 660,
        "wires": [
            [
                "9dfb37debb332ef1"
            ]
        ]
    },
    {
        "id": "c8bd1470349e5045",
        "type": "file",
        "z": "62256efe3f7916e8",
        "name": "Log write file",
        "filename": "~/.node-red/context/Log.txt",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1230,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "9b77f3266a09e196",
        "type": "function",
        "z": "62256efe3f7916e8",
        "name": "Log write file",
        "func": "var x = global.get('03DI_RC_Channel2Down');\nvar xOld = global.get('03DI_RC_Channel2DownOld');\n\nif (x !== xOld && x) {\n  msg.payload = global.get('date') + \" \" + global.get('time') + \",\" + \"Markise,\" + \"Fernbedienung Runter,\" + \"Ein\";\n  global.set('03DI_RC_Channel2DownOld', true);\n  return msg;\n};\nif (x !== xOld && !x) {\n  msg.payload = global.get('date') + \" \" + global.get('time') + \",\" + \"Markise,\" + \"Fernbedienung Runter,\" + \"Aus\";\n  global.set('03DI_RC_Channel2DownOld', false);\n  return msg;\n};\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 800,
        "wires": [
            [
                "c8bd1470349e5045"
            ]
        ]
    },
    {
        "id": "23e9c99a8be6b6da",
        "type": "file",
        "z": "62256efe3f7916e8",
        "name": "Log write file",
        "filename": "~/.node-red/context/Log.txt",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1150,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "efa2700fdaeb0bc8",
        "type": "function",
        "z": "62256efe3f7916e8",
        "name": "Log write file",
        "func": "var x = global.get('07IN1_Rain');\nvar xOld = global.get('07IN1_RainOld');\n\nif (x !== xOld && x) {\n  msg.payload = global.get('date') + \" \" + global.get('time') + \",\" + \"Markise,\" + \"Regensensor,\" + \"Regen\";\n  global.set('07IN1_RainOld', true);\n  return msg;\n};\nif (x !== xOld && !x) {\n  msg.payload = global.get('date') + \" \" + global.get('time') + \",\" + \"Markise,\" + \"Regensensor,\" + \"Kein Regen\";\n  global.set('07IN1_RainOld', false);\n  return msg;\n};\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 980,
        "wires": [
            [
                "23e9c99a8be6b6da"
            ]
        ]
    },
    {
        "id": "df86b0ecf6067a8c",
        "type": "comment",
        "z": "62256efe3f7916e8",
        "name": "Analog Input",
        "info": "",
        "x": 210,
        "y": 1020,
        "wires": []
    },
    {
        "id": "664c5efce5851ccb",
        "type": "inject",
        "z": "62256efe3f7916e8",
        "name": "Every 2 second",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1160,
        "wires": [
            [
                "32876fa5c1a62c36"
            ]
        ]
    },
    {
        "id": "32876fa5c1a62c36",
        "type": "modbus-getter",
        "z": "62256efe3f7916e8",
        "name": "FC 2: Read Input Registers",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "logIOActivities": false,
        "unitid": "10",
        "dataType": "InputRegister",
        "adr": "4",
        "quantity": "2",
        "server": "73facf39de5e6333",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 440,
        "y": 1160,
        "wires": [
            [
                "11b897cb7d32eaff",
                "3a9ae9ebf2cc27eb",
                "6b2e0456853bc52f",
                "2c572695f57bd937"
            ],
            []
        ]
    },
    {
        "id": "11b897cb7d32eaff",
        "type": "debug",
        "z": "62256efe3f7916e8",
        "name": "debug 1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 1140,
        "wires": []
    },
    {
        "id": "3a9ae9ebf2cc27eb",
        "type": "function",
        "z": "62256efe3f7916e8",
        "name": "04_CONTROLLINO_A4",
        "func": "msg.payload = flow.get('FontUebersicht') + msg.payload[0];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 1220,
        "wires": [
            [
                "f0859342c8d88cb7"
            ]
        ]
    },
    {
        "id": "f0859342c8d88cb7",
        "type": "ui_text",
        "z": "62256efe3f7916e8",
        "group": "f9a37251258d3239",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "04_CONTROLLINO_A4",
        "label": "04_CONTROLLINO_A4",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1070,
        "y": 1220,
        "wires": []
    },
    {
        "id": "6b2e0456853bc52f",
        "type": "function",
        "z": "62256efe3f7916e8",
        "name": "05_CONTROLLINO_A5",
        "func": "msg.payload = flow.get('FontUebersicht') + msg.payload[1];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 1280,
        "wires": [
            [
                "6ab19bc00823e1f3"
            ]
        ]
    },
    {
        "id": "6ab19bc00823e1f3",
        "type": "ui_text",
        "z": "62256efe3f7916e8",
        "group": "f9a37251258d3239",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "05_CONTROLLINO_A5",
        "label": "05_CONTROLLINO_A5",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1070,
        "y": 1280,
        "wires": []
    },
    {
        "id": "4342042cc7da0f58",
        "type": "comment",
        "z": "62256efe3f7916e8",
        "name": "Floating Numbers",
        "info": "",
        "x": 270.1990966796875,
        "y": 1406.2706298828125,
        "wires": []
    },
    {
        "id": "e71b3635d9b53b6f",
        "type": "function",
        "z": "62256efe3f7916e8",
        "name": "WindSpeedMax",
        "func": "msg.payload = Math.round(msg.payload * 100) / 100;\nglobal.set('WindSpeedMax',msg.payload);\nmsg.payload = flow.get('FontUebersicht') + msg.payload+ ' km/h';\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 1520,
        "wires": [
            [
                "84dd3f11a5d39a38"
            ]
        ]
    },
    {
        "id": "84dd3f11a5d39a38",
        "type": "ui_text",
        "z": "62256efe3f7916e8",
        "group": "cde3204505e233f9",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "WindSpeedMax",
        "label": "WindSpeedMax",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1320,
        "y": 1520,
        "wires": []
    },
    {
        "id": "775a904826a6bbdd",
        "type": "modbus-read",
        "z": "62256efe3f7916e8",
        "name": "10s",
        "topic": "",
        "showStatusActivities": false,
        "logIOActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "10",
        "dataType": "HoldingRegister",
        "adr": "0",
        "quantity": "2",
        "rate": "10",
        "rateUnit": "s",
        "delayOnStart": false,
        "startDelayTime": "",
        "server": "73facf39de5e6333",
        "useIOFile": false,
        "ioFile": "",
        "useIOForPayload": false,
        "emptyMsgOnFail": false,
        "x": 210,
        "y": 1520,
        "wires": [
            [
                "4afab454b4cd7755"
            ],
            []
        ]
    },
    {
        "id": "4afab454b4cd7755",
        "type": "buffer-parser",
        "z": "62256efe3f7916e8",
        "name": "",
        "data": "payload",
        "dataType": "msg",
        "specification": "spec",
        "specificationType": "ui",
        "items": [
            {
                "type": "floatbe",
                "name": "Voltage",
                "offset": 0,
                "length": 1,
                "offsetbit": 0,
                "scale": "1",
                "mask": ""
            }
        ],
        "swap1": "",
        "swap2": "",
        "swap3": "",
        "swap1Type": "swap",
        "swap2Type": "swap",
        "swap3Type": "swap",
        "msgProperty": "payload",
        "msgPropertyType": "str",
        "resultType": "value",
        "resultTypeType": "return",
        "multipleResult": false,
        "fanOutMultipleResult": false,
        "setTopic": true,
        "outputs": 1,
        "x": 410,
        "y": 1520,
        "wires": [
            [
                "44261d4bf6b45d10",
                "e2e6246d7c493ecd"
            ]
        ]
    },
    {
        "id": "dedcc080acd542c0",
        "type": "comment",
        "z": "62256efe3f7916e8",
        "name": "Digital Output",
        "info": "",
        "x": 260.1990966796875,
        "y": 1674.1416015625,
        "wires": []
    },
    {
        "id": "78b79b9b3d98e43c",
        "type": "function",
        "z": "62256efe3f7916e8",
        "name": "50000CHANNEL1UP",
        "func": "var x = global.get('50000CHANNEL1UP');\nvar xOld = global.get('50000CHANNEL1UP_Old');\n\nif (x !== xOld){\n msg.payload = x;\n return msg;\n}\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 1780,
        "wires": [
            [
                "61ec9e3e7b2e9f64"
            ]
        ]
    },
    {
        "id": "61ec9e3e7b2e9f64",
        "type": "ui_dropdown",
        "z": "62256efe3f7916e8",
        "name": "",
        "label": "50000D0CHANNEL1UP ",
        "tooltip": "50000D0CHANNEL1UP",
        "place": "",
        "group": "468662edd902235f",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "false",
                "value": false,
                "type": "bool"
            },
            {
                "label": "true",
                "value": true,
                "type": "bool"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 630,
        "y": 1780,
        "wires": [
            [
                "0b615076f3371663",
                "fa2b75968531d90e"
            ]
        ]
    },
    {
        "id": "0b615076f3371663",
        "type": "modbus-write",
        "z": "62256efe3f7916e8",
        "name": "Modbus Write 0",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "10",
        "dataType": "Coil",
        "adr": "0",
        "quantity": "1",
        "server": "73facf39de5e6333",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 900,
        "y": 1780,
        "wires": [
            [
                "8272315bd1da8e31"
            ],
            []
        ]
    },
    {
        "id": "a7a44bdab3f337a6",
        "type": "function",
        "z": "62256efe3f7916e8",
        "name": "50001CHANNEL1DOWN",
        "func": "var x = global.get('50001CHANNEL1DOWN');\nvar xOld = global.get('50001CHANNEL1DOWN_Old');\n\nif (x !== xOld){\n msg.payload = x;\n return msg;\n}\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1940,
        "wires": [
            [
                "8c5688fdad2b6673"
            ]
        ]
    },
    {
        "id": "8c5688fdad2b6673",
        "type": "ui_dropdown",
        "z": "62256efe3f7916e8",
        "name": "",
        "label": "50001CHANNEL1DOWN",
        "tooltip": "50001CHANNEL1DOWN",
        "place": "",
        "group": "468662edd902235f",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "false",
                "value": false,
                "type": "bool"
            },
            {
                "label": "true",
                "value": true,
                "type": "bool"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 650,
        "y": 1940,
        "wires": [
            [
                "665f787fc65839bb",
                "05b3f6540de8580d"
            ]
        ]
    },
    {
        "id": "665f787fc65839bb",
        "type": "modbus-write",
        "z": "62256efe3f7916e8",
        "name": "Modbus Write 1",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "10",
        "dataType": "Coil",
        "adr": "1",
        "quantity": "1",
        "server": "73facf39de5e6333",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 920,
        "y": 1940,
        "wires": [
            [
                "8272315bd1da8e31"
            ],
            []
        ]
    },
    {
        "id": "5365fcc5b47abaf2",
        "type": "function",
        "z": "62256efe3f7916e8",
        "name": "50002CHANNEL2UP",
        "func": "var x = global.get('50002CHANNEL2UP');\nvar xOld = global.get('50002CHANNEL2UP_Old');\n\nif (x !== xOld){\n msg.payload = x;\n return msg;\n}\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 2100,
        "wires": [
            [
                "9d03cedeb0777bb1"
            ]
        ]
    },
    {
        "id": "9d03cedeb0777bb1",
        "type": "ui_dropdown",
        "z": "62256efe3f7916e8",
        "name": "",
        "label": "50002D0CHANNEL2UP",
        "tooltip": "50002D0CHANNEL2UP",
        "place": "",
        "group": "468662edd902235f",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "false",
                "value": false,
                "type": "bool"
            },
            {
                "label": "true",
                "value": true,
                "type": "bool"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 650,
        "y": 2100,
        "wires": [
            [
                "e57fc0f29bc385e8",
                "7c36e83492be4c91"
            ]
        ]
    },
    {
        "id": "e57fc0f29bc385e8",
        "type": "modbus-write",
        "z": "62256efe3f7916e8",
        "name": "Modbus Write 2",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "10",
        "dataType": "Coil",
        "adr": "2",
        "quantity": "1",
        "server": "73facf39de5e6333",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 920,
        "y": 2100,
        "wires": [
            [
                "8272315bd1da8e31"
            ],
            []
        ]
    },
    {
        "id": "b3233375a075920a",
        "type": "function",
        "z": "62256efe3f7916e8",
        "name": "50003CHANNEL2DOWN",
        "func": "var x = global.get('50003CHANNEL2DOWN');\nvar xOld = global.get('50003CHANNEL2DOWN_Old');\n\nif (x !== xOld || x){\n msg.payload = x;\n return msg;\n}\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 2260,
        "wires": [
            [
                "896c58bccb1d161b"
            ]
        ]
    },
    {
        "id": "896c58bccb1d161b",
        "type": "ui_dropdown",
        "z": "62256efe3f7916e8",
        "name": "",
        "label": "50003CHANNEL2DOWN",
        "tooltip": "50003CHANNEL2DOWN",
        "place": "",
        "group": "468662edd902235f",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "false",
                "value": false,
                "type": "bool"
            },
            {
                "label": "true",
                "value": true,
                "type": "bool"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 630,
        "y": 2260,
        "wires": [
            [
                "fa0caf2031125923",
                "a221cd2885e03b4e"
            ]
        ]
    },
    {
        "id": "fa0caf2031125923",
        "type": "modbus-write",
        "z": "62256efe3f7916e8",
        "name": "Modbus Write 3",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "10",
        "dataType": "Coil",
        "adr": "3",
        "quantity": "1",
        "server": "73facf39de5e6333",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 900,
        "y": 2260,
        "wires": [
            [
                "8272315bd1da8e31"
            ],
            []
        ]
    },
    {
        "id": "be989aa5163fa862",
        "type": "file",
        "z": "62256efe3f7916e8",
        "name": "Log write file",
        "filename": "~/.node-red/context/Log.txt",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1030,
        "y": 1860,
        "wires": [
            []
        ]
    },
    {
        "id": "fa2b75968531d90e",
        "type": "function",
        "z": "62256efe3f7916e8",
        "name": "Log write file",
        "func": "global.set('50000CHANNEL1UP',msg.payload);\nvar x = msg.payload; \nvar xOld = global.get('50000CHANNEL1UP_Old');\nglobal.set('50000CHANNEL1UP',x);\nglobal.set('50000CHANNEL1UP_Old', x);\nif (x && (x !== xOld)) {\n  msg.payload = global.get('date') + \" \" + global.get('time') + \",\" + \"Jalausie,\" + \"Hoch,\" + \"Ein\";\n  return msg;\n}\nif (!x && (x !== xOld)) {\n  msg.payload = global.get('date') + \" \" + global.get('time') + \",\" + \"Jalausie,\" + \"Hoch,\" + \"Aus\";\n  return msg;\n}\n\n\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 1860,
        "wires": [
            [
                "be989aa5163fa862"
            ]
        ]
    },
    {
        "id": "fff31a0677bc85a8",
        "type": "file",
        "z": "62256efe3f7916e8",
        "name": "Log write file",
        "filename": "~/.node-red/context/Log.txt",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1030,
        "y": 2020,
        "wires": [
            []
        ]
    },
    {
        "id": "05b3f6540de8580d",
        "type": "function",
        "z": "62256efe3f7916e8",
        "name": "Log write file",
        "func": "var x = msg.payload; \nvar xOld = global.get('50001CHANNEL1DOWN_Old');\nglobal.set('50001CHANNEL1DOWN',x);\nglobal.set('50001CHANNEL1DOWN_Old', x);\nif (x && (x !== xOld)) {\n  msg.payload = global.get('date') + \" \" + global.get('time') + \",\" + \"Jalausie,\" + \"Runter,\" + \"Ein\";\n  return msg;\n}\nif (!x && (x !== xOld)) {\n  msg.payload = global.get('date') + \" \" + global.get('time') + \",\" + \"Jalausie,\" + \"Runter,\" + \"Aus\";\n  return msg;\n}\n\n\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2020,
        "wires": [
            [
                "fff31a0677bc85a8"
            ]
        ]
    },
    {
        "id": "20c9aef83334252e",
        "type": "file",
        "z": "62256efe3f7916e8",
        "name": "Log write file",
        "filename": "~/.node-red/context/Log.txt",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1030,
        "y": 2160,
        "wires": [
            []
        ]
    },
    {
        "id": "7c36e83492be4c91",
        "type": "function",
        "z": "62256efe3f7916e8",
        "name": "Log write file",
        "func": "var x = msg.payload;\nvar xOld = global.get('50002CHANNEL2UP_Old');\nglobal.set('50002CHANNEL2UP',x);\nglobal.set('50002CHANNEL2UP_Old', x);\nif (x && (x !== xOld)) {\n  msg.payload = global.get('date') + \" \" + global.get('time') + \",\" + \"Markise,\" + \"Hoch,\" + \"Ein\";\n  return msg;\n}\nif (!x && (x !== xOld)) {\n  msg.payload = global.get('date') + \" \" + global.get('time') + \",\" + \"Markise,\" + \"Hoch,\" + \"Aus\";\n  return msg;\n}\n\n\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2160,
        "wires": [
            [
                "20c9aef83334252e"
            ]
        ]
    },
    {
        "id": "dfdfd3babc585cc5",
        "type": "file",
        "z": "62256efe3f7916e8",
        "name": "Log write file",
        "filename": "~/.node-red/context/Log.txt",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1030,
        "y": 2320,
        "wires": [
            []
        ]
    },
    {
        "id": "a221cd2885e03b4e",
        "type": "function",
        "z": "62256efe3f7916e8",
        "name": "Log write file",
        "func": "var x = msg.payload\nvar xOld = global.get('50003CHANNEL2DOWN_Old');\nglobal.set('50003CHANNEL2DOWN',x);\nglobal.set('50003CHANNEL2DOWN_Old', x);\nif (x && (x !== xOld)) {\n  msg.payload = global.get('date') + \" \" + global.get('time') + \",\" + \"Markise,\" + \"Runter,\" + \"Ein\";\n  return msg;\n}\nif (!x && (x !== xOld)) {\n  msg.payload = global.get('date') + \" \" + global.get('time') + \",\" + \"Markise,\" + \"Runter,\" + \"Aus\";\n  return msg;\n}\n\n\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 2320,
        "wires": [
            [
                "dfdfd3babc585cc5"
            ]
        ]
    },
    {
        "id": "92b6eb1e1378227c",
        "type": "inject",
        "z": "62256efe3f7916e8",
        "name": "every2seconds",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 2160,
        "wires": [
            [
                "78b79b9b3d98e43c",
                "a7a44bdab3f337a6",
                "5365fcc5b47abaf2",
                "b3233375a075920a",
                "4c7bbad7039387aa",
                "2ba9d8bf891dbec5"
            ]
        ]
    },
    {
        "id": "4c7bbad7039387aa",
        "type": "function",
        "z": "62256efe3f7916e8",
        "name": "50004WindLED",
        "func": "var x1 = global.get('BV_WindAlarm1');\nvar x2 = global.get('BV_WindAlarm2');\nvar x = x1 || x2;\nglobal.set('50004WindLED', x);\n\nvar xOld = global.get('50004WindLED_Old');\n\nif (x != xOld) {\n    msg.payload = x;\n    return msg;\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 2400,
        "wires": [
            [
                "b84d4eb043b1da41"
            ]
        ]
    },
    {
        "id": "b84d4eb043b1da41",
        "type": "ui_dropdown",
        "z": "62256efe3f7916e8",
        "name": "",
        "label": "50004WindLED                                ",
        "tooltip": "50004WindLED                      ",
        "place": "",
        "group": "468662edd902235f",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "false",
                "value": false,
                "type": "bool"
            },
            {
                "label": "true",
                "value": true,
                "type": "bool"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 700,
        "y": 2400,
        "wires": [
            [
                "b2ca440b5dc5ad6b",
                "c613b2b34a5e6f24"
            ]
        ]
    },
    {
        "id": "b2ca440b5dc5ad6b",
        "type": "modbus-write",
        "z": "62256efe3f7916e8",
        "name": "Modbus Write 4",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "10",
        "dataType": "Coil",
        "adr": "4",
        "quantity": "1",
        "server": "73facf39de5e6333",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1000,
        "y": 2400,
        "wires": [
            [
                "8272315bd1da8e31"
            ],
            []
        ]
    },
    {
        "id": "bd7c188ed465b855",
        "type": "file",
        "z": "62256efe3f7916e8",
        "name": "Log write file",
        "filename": "~/.node-red/context/Log.txt",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1130,
        "y": 2460,
        "wires": [
            []
        ]
    },
    {
        "id": "c613b2b34a5e6f24",
        "type": "function",
        "z": "62256efe3f7916e8",
        "name": "Log write file",
        "func": "var x = msg.payload\nvar xOld = global.get('50004WindLED_Old');\nglobal.set('50004WindLED',x);\nglobal.set('50004WindLED_Old', x);\nif (x && (x !== xOld)) {\n  msg.payload = global.get('date') + \" \" + global.get('time') + \",\" + \"LED,\" + \"Wind,\" + \"Ein\";\n  return msg;\n}\nif (!x && (x !== xOld)) {\n  msg.payload = global.get('date') + \" \" + global.get('time') + \",\" + \"LED,\" + \"Wind,\" + \"Aus\";\n  return msg;\n}\n\n\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 2460,
        "wires": [
            [
                "bd7c188ed465b855"
            ]
        ]
    },
    {
        "id": "2ba9d8bf891dbec5",
        "type": "function",
        "z": "62256efe3f7916e8",
        "name": "50005RainLED",
        "func": "var x1 = global.get('BV_RainAlarm1');\nvar x2 = global.get('BV_RainAlarm2');\nvar x = x1 || x2;\nglobal.set('50005RainLED', x);\n\nvar xOld = global.get('50005RainLED_Old');\n\nif (x != xOld) {\n    msg.payload = x;\n    return msg;\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 2540,
        "wires": [
            [
                "503314c31c8a024b"
            ]
        ]
    },
    {
        "id": "503314c31c8a024b",
        "type": "ui_dropdown",
        "z": "62256efe3f7916e8",
        "name": "",
        "label": "50005RainLED                                                ",
        "tooltip": "50005RainLED                    ",
        "place": "",
        "group": "468662edd902235f",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "false",
                "value": false,
                "type": "bool"
            },
            {
                "label": "true",
                "value": true,
                "type": "bool"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 720,
        "y": 2540,
        "wires": [
            [
                "15881aeb720ff50b",
                "f18e3c23b6d1cf1d"
            ]
        ]
    },
    {
        "id": "15881aeb720ff50b",
        "type": "modbus-write",
        "z": "62256efe3f7916e8",
        "name": "Modbus Write 5",
        "showStatusActivities": false,
        "showErrors": false,
        "showWarnings": true,
        "unitid": "10",
        "dataType": "Coil",
        "adr": "5",
        "quantity": "1",
        "server": "73facf39de5e6333",
        "emptyMsgOnFail": false,
        "keepMsgProperties": false,
        "delayOnStart": false,
        "startDelayTime": "",
        "x": 1020,
        "y": 2540,
        "wires": [
            [
                "8272315bd1da8e31"
            ],
            []
        ]
    },
    {
        "id": "41acf288c4f3b8c2",
        "type": "file",
        "z": "62256efe3f7916e8",
        "name": "Log write file",
        "filename": "~/.node-red/context/Log.txt",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1150,
        "y": 2600,
        "wires": [
            []
        ]
    },
    {
        "id": "f18e3c23b6d1cf1d",
        "type": "function",
        "z": "62256efe3f7916e8",
        "name": "Log write file",
        "func": "var x = msg.payload\nvar xOld = global.get('50005RainLED_Old');\nglobal.set('50005RainLED',x);\nglobal.set('50005RainLED_Old', x);\nif (x && (x !== xOld)) {\n  msg.payload = global.get('date') + \" \" + global.get('time') + \",\" + \"LED,\" + \"Regen,\" + \"Ein\";\n  return msg;\n}\nif (!x && (x !== xOld)) {\n  msg.payload = global.get('date') + \" \" + global.get('time') + \",\" + \"LED,\" + \"Regen,\" + \"Aus\";\n  return msg;\n}\n\n\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 2600,
        "wires": [
            [
                "41acf288c4f3b8c2"
            ]
        ]
    },
    {
        "id": "e99efa674d9531ae",
        "type": "link out",
        "z": "62256efe3f7916e8",
        "name": "RX",
        "mode": "link",
        "links": [
            "e4b8737bf24b5634"
        ],
        "x": 665,
        "y": 280,
        "wires": []
    },
    {
        "id": "2c572695f57bd937",
        "type": "link out",
        "z": "62256efe3f7916e8",
        "name": "RX",
        "mode": "link",
        "links": [
            "e4b8737bf24b5634"
        ],
        "x": 685,
        "y": 1060,
        "wires": []
    },
    {
        "id": "44261d4bf6b45d10",
        "type": "link out",
        "z": "62256efe3f7916e8",
        "name": "RX",
        "mode": "link",
        "links": [
            "e4b8737bf24b5634"
        ],
        "x": 590.0055541992188,
        "y": 1442.1416015625,
        "wires": []
    },
    {
        "id": "8272315bd1da8e31",
        "type": "link out",
        "z": "62256efe3f7916e8",
        "name": "TX",
        "mode": "link",
        "links": [
            "21289d175c310c66"
        ],
        "x": 1428.650634765625,
        "y": 2261.1416015625,
        "wires": []
    },
    {
        "id": "e2e6246d7c493ecd",
        "type": "function",
        "z": "62256efe3f7916e8",
        "name": "30000windSpeed",
        "func": "msg.payload = msg.payload[0];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 1520,
        "wires": [
            [
                "41337e2a1c963412"
            ]
        ]
    },
    {
        "id": "e6850585a0c8395b",
        "type": "inject",
        "z": "62256efe3f7916e8",
        "name": "Set Filter time 120s",
        "props": [
            {
                "p": "filterTime",
                "v": "3600",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 710,
        "y": 1380,
        "wires": [
            [
                "41337e2a1c963412"
            ]
        ]
    },
    {
        "id": "41337e2a1c963412",
        "type": "function",
        "z": "62256efe3f7916e8",
        "name": "max 1h",
        "func": "// determines the time weighted average, max and min of all payload values passed in\n// over the specified time range passed to node by msg.filterTime in seconds\n// developed from Code posted by Colin to Node_red Forum \n//     https://discourse.nodered.org/t/nodes-suggestion-for-timed-rolling-average-and-desynchronised-sum/4933/26 by Colin\n\nif (typeof msg.filterTime == 'number') {\n    flow.set('filterTime', msg.filterTime);\n    node.warn(`Filter Time set to: ${msg.filterTime} seconds`);\n    msg = null;\n} else if (typeof msg.payload == 'number') {\n    let filterTime = flow.get('filterTime') || 60 // in seconds\n    const range = filterTime * 1000; // window time millisecs\n    let buffer = flow.get('buffer') || [];\n    let now = new Date();\n    let lastTimestamp = flow.get(\"lastTimestamp\") || now;\n    let value = Number(msg.payload);\n    // remove any samples that are too old\n    // @ts-ignore\n    while (buffer[0] && buffer[0].timestamp < now - range) {\n        // remove oldest sample from array and total\n        //node.warn(`removing oldest ${buffer[0].timestamp}`);\n        lastTimestamp = buffer[0].timestamp;\n        buffer.shift();\n    }\n    flow.set('lastTimestamp', lastTimestamp);\n\n    // add the new sample to the end\n    buffer.push({\n        timestamp: now,\n        value: value\n    });\n    // @ts-ignore\n    let duration = (now - lastTimestamp); // difference between latest sample and oldest\n    // now calculate Average, max and min\n    let max = value;\n    let min = value;\n    let ave = 0;\n    for (var i in buffer) {\n        max = Math.max(max, buffer[i].value);\n        min = Math.min(min, buffer[i].value);\n        ave += buffer[i].value * (buffer[i].timestamp - lastTimestamp);\n        lastTimestamp = buffer[i].timestamp;\n    }\n    ave = ave / duration;\n\n    flow.set('buffer', buffer);\n    //flow.set('total', total);\n    msg.payload = max;\n    msg.result = {\n        average: ave,\n        max: max,\n        min: min\n    };\n    node.status({ text: `${buffer.length}` });\n    //node.warn(`length: ${buffer.length}, average: ${ave}, min: ${min}, max: ${max} over ${duration/1000} seconds`);\n\n};\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 1520,
        "wires": [
            [
                "e71b3635d9b53b6f"
            ]
        ]
    },
    {
        "id": "05a3942e511ee8eb",
        "type": "comment",
        "z": "62256efe3f7916e8",
        "name": "Maximale Windböe innerhalb der letzten Stunde",
        "info": "",
        "x": 880,
        "y": 1580,
        "wires": []
    },
    {
        "id": "e4b8737bf24b5634",
        "type": "link in",
        "z": "0e918df6115ec9f7",
        "name": "link in 2",
        "links": [
            "2c572695f57bd937",
            "44261d4bf6b45d10",
            "e99efa674d9531ae"
        ],
        "x": 315,
        "y": 260,
        "wires": [
            [
                "59e702745a4b4db6"
            ]
        ]
    },
    {
        "id": "1b74cd4dbeca1c86",
        "type": "comment",
        "z": "0e918df6115ec9f7",
        "name": "RX",
        "info": "",
        "x": 310,
        "y": 320,
        "wires": []
    },
    {
        "id": "21289d175c310c66",
        "type": "link in",
        "z": "0e918df6115ec9f7",
        "name": "link in 3",
        "links": [
            "8272315bd1da8e31"
        ],
        "x": 315,
        "y": 420,
        "wires": [
            [
                "e03f08627317f02f"
            ]
        ]
    },
    {
        "id": "47f52ec385b663d2",
        "type": "comment",
        "z": "0e918df6115ec9f7",
        "name": "TX",
        "info": "",
        "x": 310,
        "y": 480,
        "wires": []
    },
    {
        "id": "490e4dba2e1b0840",
        "type": "ui_switch",
        "z": "0e918df6115ec9f7",
        "name": "",
        "label": "RX Empfange Daten",
        "tooltip": "RX Empfange Daten",
        "group": "40ef4b80cc4f3c98",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "wb_sunny",
        "oncolor": "SlateBlue",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "wb_sunny",
        "offcolor": "Gainsboro",
        "animate": false,
        "className": "",
        "x": 760,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "59e702745a4b4db6",
        "type": "trigger",
        "z": "0e918df6115ec9f7",
        "name": "",
        "op1": "true",
        "op2": "false",
        "op1type": "bool",
        "op2type": "bool",
        "duration": "1",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 500,
        "y": 260,
        "wires": [
            [
                "490e4dba2e1b0840"
            ]
        ]
    },
    {
        "id": "e03f08627317f02f",
        "type": "trigger",
        "z": "0e918df6115ec9f7",
        "name": "",
        "op1": "true",
        "op2": "false",
        "op1type": "bool",
        "op2type": "bool",
        "duration": "1",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 680,
        "y": 440,
        "wires": [
            [
                "bd170c6438497d57"
            ]
        ]
    },
    {
        "id": "bd170c6438497d57",
        "type": "ui_switch",
        "z": "0e918df6115ec9f7",
        "name": "",
        "label": "TX Semde Daten",
        "tooltip": "TX Semde Daten",
        "group": "40ef4b80cc4f3c98",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "wb_sunny",
        "oncolor": "SlateBlue",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "wb_sunny",
        "offcolor": "Gainsboro",
        "animate": false,
        "className": "",
        "x": 933.1990966796875,
        "y": 442.2061462402344,
        "wires": [
            []
        ]
    }
]